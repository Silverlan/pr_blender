OpenShadingLanguage 1.00
# Compiled by oslc 1.11.17
# options: -q -O2 -IE:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders -IE:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders -o E:/projects/blender_latest/build_windows_Bpy_x64_vc16_Release/intern/cycles/kernel/osl/shaders/node_musgrave_texture.oso
shader node_musgrave_texture
param	int	use_mapping	0		%read{7,7} %write{2147483647,-1}
param	matrix	mapping	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0		%read{8,8} %write{2147483647,-1}
param	string	musgrave_type	"fBM"		%read{12,1081} %write{2147483647,-1}
param	string	dimensions	"3D"		%read{9,806} %write{2147483647,-1}
param	point	Vector	0 0 0		%read{6,6} %write{0,0} %initexpr
param	float	W	0		%read{11,811} %write{2147483647,-1}
param	float	Dimension	2		%read{1,1} %write{2147483647,-1}
param	float	Scale	5		%read{11,816} %write{2147483647,-1}
param	float	Detail	2		%read{3,3} %write{2147483647,-1}
param	float	Lacunarity	2		%read{5,5} %write{2147483647,-1}
param	float	Offset	0		%read{110,1152} %write{2147483647,-1}
param	float	Gain	1		%read{111,1059} %write{2147483647,-1}
oparam	float	Fac	0		%read{2147483647,-1} %write{54,1159}
global	point	P	%read{0,0} %write{2147483647,-1}
local	float	___446_f	%read{22,251} %write{22,246}
local	float	___447_f	%read{280,548} %write{280,543}
local	float	___448_f	%read{569,798} %write{569,793}
local	float	___449_f	%read{835,1151} %write{835,1146}
local	float	___508_p	%read{65,86} %write{58,80}
local	float	___508_value	%read{65,95} %write{59,94}
local	float	___508_pwr	%read{65,93} %write{60,80}
local	float	___508_pwHL	%read{65,80} %write{62,62}
local	int	___509_i	%read{65,80} %write{64,80}
local	float	___508_rmd	%read{83,92} %write{82,82}
local	float	___512_p	%read{22,45} %write{15,38}
local	float	___512_value	%read{22,54} %write{16,53}
local	float	___512_pwr	%read{22,43} %write{17,38}
local	float	___512_pwHL	%read{22,38} %write{19,19}
local	int	___513_i	%read{22,38} %write{21,38}
local	float	___512_rmd	%read{41,43} %write{40,40}
local	float	___516_p	%read{213,246} %write{208,240}
local	float	___516_pwHL	%read{211,240} %write{210,210}
local	float	___516_pwr	%read{223,253} %write{211,240}
local	float	___516_value	%read{223,257} %write{219,256}
local	int	___517_i	%read{223,240} %write{222,240}
local	float	___518_increment	%read{223,240} %write{223,240}
local	float	___516_rmd	%read{243,255} %write{242,242}
local	float	___519_increment	%read{255,255} %write{254,254}
local	float	___520_p	%read{104,148} %write{99,142}
local	float	___520_pwHL	%read{102,142} %write{101,101}
local	float	___520_pwr	%read{115,155} %write{102,142}
local	float	___520_value	%read{111,158} %write{110,157}
local	float	___520_weight	%read{115,142} %write{111,142}
local	int	___521_i	%read{115,142} %write{114,142}
local	float	___522_signal	%read{115,142} %write{115,142}
local	float	___520_rmd	%read{145,156} %write{144,144}
local	float	___525_p	%read{167,203} %write{162,203}
local	float	___525_pwHL	%read{165,203} %write{164,164}
local	float	___525_pwr	%read{180,203} %write{165,203}
local	float	___525_signal	%read{175,203} %write{174,203}
local	float	___525_value	%read{180,204} %write{176,203}
local	float	___525_weight	%read{180,203} %write{177,203}
local	int	___526_i	%read{180,203} %write{179,203}
local	float	___528_p.x	%read{329,355} %write{321,349} %mystruct{___528_p} %mystructfield{0}
local	float	___528_p.y	%read{329,355} %write{322,349} %mystruct{___528_p} %mystructfield{1}
local	float	___528_value	%read{329,364} %write{323,363}
local	float	___528_pwr	%read{329,362} %write{324,349}
local	float	___528_pwHL	%read{329,349} %write{326,326}
local	int	___529_i	%read{329,349} %write{328,349}
local	float	___528_rmd	%read{352,361} %write{351,351}
local	float	___532_p.x	%read{280,308} %write{272,301} %mystruct{___532_p} %mystructfield{0}
local	float	___532_p.y	%read{280,308} %write{273,301} %mystruct{___532_p} %mystructfield{1}
local	float	___532_value	%read{280,317} %write{274,316}
local	float	___532_pwr	%read{280,306} %write{275,301}
local	float	___532_pwHL	%read{280,301} %write{277,277}
local	int	___533_i	%read{280,301} %write{279,301}
local	float	___532_rmd	%read{304,306} %write{303,303}
local	float	___536_p.x	%read{500,543} %write{494,537} %mystruct{___536_p} %mystructfield{0}
local	float	___536_p.y	%read{500,543} %write{495,537} %mystruct{___536_p} %mystructfield{1}
local	float	___536_pwHL	%read{498,537} %write{497,497}
local	float	___536_pwr	%read{515,550} %write{498,537}
local	float	___536_value	%read{515,554} %write{506,553}
local	int	___537_i	%read{515,537} %write{514,537}
local	float	___538_increment	%read{515,537} %write{515,537}
local	float	___536_rmd	%read{540,552} %write{539,539}
local	float	___539_increment	%read{552,552} %write{551,551}
local	float	___540_p.x	%read{374,428} %write{368,422} %mystruct{___540_p} %mystructfield{0}
local	float	___540_p.y	%read{374,428} %write{369,422} %mystruct{___540_p} %mystructfield{1}
local	float	___540_pwHL	%read{372,422} %write{371,371}
local	float	___540_pwr	%read{390,435} %write{372,422}
local	float	___540_value	%read{381,438} %write{380,437}
local	float	___540_weight	%read{390,422} %write{381,422}
local	int	___541_i	%read{390,422} %write{389,422}
local	float	___542_signal	%read{390,422} %write{390,422}
local	float	___540_rmd	%read{425,436} %write{424,424}
local	float	___545_p.x	%read{448,489} %write{442,489} %mystruct{___545_p} %mystructfield{0}
local	float	___545_p.y	%read{448,489} %write{443,489} %mystruct{___545_p} %mystructfield{1}
local	float	___545_pwHL	%read{446,489} %write{445,445}
local	float	___545_pwr	%read{461,489} %write{446,489}
local	float	___545_signal	%read{456,489} %write{455,489}
local	float	___545_value	%read{461,490} %write{457,489}
local	float	___545_weight	%read{461,489} %write{458,489}
local	int	___546_i	%read{461,489} %write{460,489}
local	point	___548_p	%read{612,633} %write{605,627}
local	float	___548_value	%read{612,642} %write{606,641}
local	float	___548_pwr	%read{612,640} %write{607,627}
local	float	___548_pwHL	%read{612,627} %write{609,609}
local	int	___549_i	%read{612,627} %write{611,627}
local	float	___548_rmd	%read{630,639} %write{629,629}
local	point	___552_p	%read{569,592} %write{562,585}
local	float	___552_value	%read{569,601} %write{563,600}
local	float	___552_pwr	%read{569,590} %write{564,585}
local	float	___552_pwHL	%read{569,585} %write{566,566}
local	int	___553_i	%read{569,585} %write{568,585}
local	float	___552_rmd	%read{588,590} %write{587,587}
local	point	___556_p	%read{760,793} %write{755,787}
local	float	___556_pwHL	%read{758,787} %write{757,757}
local	float	___556_pwr	%read{770,800} %write{758,787}
local	float	___556_value	%read{770,804} %write{766,803}
local	int	___557_i	%read{770,787} %write{769,787}
local	float	___558_increment	%read{770,787} %write{770,787}
local	float	___556_rmd	%read{790,802} %write{789,789}
local	float	___559_increment	%read{802,802} %write{801,801}
local	point	___560_p	%read{651,695} %write{646,689}
local	float	___560_pwHL	%read{649,689} %write{648,648}
local	float	___560_pwr	%read{662,702} %write{649,689}
local	float	___560_value	%read{658,705} %write{657,704}
local	float	___560_weight	%read{662,689} %write{658,689}
local	int	___561_i	%read{662,689} %write{661,689}
local	float	___562_signal	%read{662,689} %write{662,689}
local	float	___560_rmd	%read{692,703} %write{691,691}
local	point	___565_p	%read{714,750} %write{709,750}
local	float	___565_pwHL	%read{712,750} %write{711,711}
local	float	___565_pwr	%read{727,750} %write{712,750}
local	float	___565_signal	%read{722,750} %write{721,750}
local	float	___565_value	%read{727,751} %write{723,750}
local	float	___565_weight	%read{727,750} %write{724,750}
local	int	___566_i	%read{727,750} %write{726,750}
local	float	___568_p.x	%read{892,923} %write{882,917} %mystruct{___568_p} %mystructfield{0}
local	float	___568_p.y	%read{892,923} %write{883,917} %mystruct{___568_p} %mystructfield{1}
local	float	___568_p.z	%read{892,923} %write{884,917} %mystruct{___568_p} %mystructfield{2}
local	float	___568_p.w	%read{892,924} %write{885,917} %mystruct{___568_p} %mystructfield{3}
local	float	___568_value	%read{892,933} %write{886,932}
local	float	___568_pwr	%read{892,931} %write{887,917}
local	float	___568_pwHL	%read{892,917} %write{889,889}
local	int	___569_i	%read{892,917} %write{891,917}
local	float	___568_rmd	%read{920,930} %write{919,919}
local	float	___572_p.x	%read{835,868} %write{825,861} %mystruct{___572_p} %mystructfield{0}
local	float	___572_p.y	%read{835,868} %write{826,861} %mystruct{___572_p} %mystructfield{1}
local	float	___572_p.z	%read{835,868} %write{827,861} %mystruct{___572_p} %mystructfield{2}
local	float	___572_p.w	%read{835,869} %write{828,861} %mystruct{___572_p} %mystructfield{3}
local	float	___572_value	%read{835,878} %write{829,877}
local	float	___572_pwr	%read{835,866} %write{830,861}
local	float	___572_pwHL	%read{835,861} %write{832,832}
local	int	___573_i	%read{835,861} %write{834,861}
local	float	___572_rmd	%read{864,866} %write{863,863}
local	float	___576_p.x	%read{1092,1145} %write{1084,1139} %mystruct{___576_p} %mystructfield{0}
local	float	___576_p.y	%read{1092,1145} %write{1085,1139} %mystruct{___576_p} %mystructfield{1}
local	float	___576_p.z	%read{1092,1145} %write{1086,1139} %mystruct{___576_p} %mystructfield{2}
local	float	___576_p.w	%read{1093,1146} %write{1087,1139} %mystruct{___576_p} %mystructfield{3}
local	float	___576_pwHL	%read{1090,1139} %write{1089,1089}
local	float	___576_pwr	%read{1112,1153} %write{1090,1139}
local	float	___576_value	%read{1112,1157} %write{1099,1156}
local	int	___577_i	%read{1112,1139} %write{1111,1139}
local	float	___578_increment	%read{1112,1139} %write{1112,1139}
local	float	___576_rmd	%read{1142,1155} %write{1141,1141}
local	float	___579_increment	%read{1155,1155} %write{1154,1154}
local	float	___580_p.x	%read{945,1009} %write{937,1003} %mystruct{___580_p} %mystructfield{0}
local	float	___580_p.y	%read{945,1009} %write{938,1003} %mystruct{___580_p} %mystructfield{1}
local	float	___580_p.z	%read{945,1009} %write{939,1003} %mystruct{___580_p} %mystructfield{2}
local	float	___580_p.w	%read{946,1010} %write{940,1003} %mystruct{___580_p} %mystructfield{3}
local	float	___580_pwHL	%read{943,1003} %write{942,942}
local	float	___580_pwr	%read{966,1017} %write{943,1003}
local	float	___580_value	%read{953,1020} %write{952,1019}
local	float	___580_weight	%read{966,1003} %write{953,1003}
local	int	___581_i	%read{966,1003} %write{965,1003}
local	float	___582_signal	%read{966,1003} %write{966,1003}
local	float	___580_rmd	%read{1006,1018} %write{1005,1005}
local	float	___585_p.x	%read{1032,1079} %write{1024,1079} %mystruct{___585_p} %mystructfield{0}
local	float	___585_p.y	%read{1032,1079} %write{1025,1079} %mystruct{___585_p} %mystructfield{1}
local	float	___585_p.z	%read{1032,1079} %write{1026,1079} %mystruct{___585_p} %mystructfield{2}
local	float	___585_p.w	%read{1033,1079} %write{1027,1079} %mystruct{___585_p} %mystructfield{3}
local	float	___585_pwHL	%read{1030,1079} %write{1029,1029}
local	float	___585_pwr	%read{1046,1079} %write{1030,1079}
local	float	___585_signal	%read{1041,1079} %write{1040,1079}
local	float	___585_value	%read{1046,1080} %write{1042,1079}
local	float	___585_weight	%read{1046,1079} %write{1043,1079}
local	int	___586_i	%read{1046,1079} %write{1045,1079}
local	float	dimension	%read{18,1088} %write{1,1}
local	float	octaves	%read{22,1141} %write{4,4}
local	float	lacunarity	%read{19,1139} %write{5,5}
local	point	s	%read{8,810} %write{6,8}
local	float	___588_p	%read{15,208} %write{11,11}
local	float	___595_p.x	%read{272,494} %write{267,267} %mystruct{___595_p} %mystructfield{0}
local	float	___595_p.y	%read{273,495} %write{268,268} %mystruct{___595_p} %mystructfield{1}
local	point	___602_p	%read{562,755} %write{558,558}
local	float	___609_p.x	%read{825,1084} %write{818,818} %mystruct{___609_p} %mystructfield{0}
local	float	___609_p.y	%read{826,1085} %write{819,819} %mystruct{___609_p} %mystructfield{1}
local	float	___609_p.z	%read{827,1086} %write{820,820} %mystruct{___609_p} %mystructfield{2}
local	float	___609_p.w	%read{828,1087} %write{821,821} %mystruct{___609_p} %mystructfield{3}
const	float	$const1	9.99999975e-06		%read{1,5} %write{2147483647,-1}
const	float	$const2	0		%read{4,1159} %write{2147483647,-1}
const	float	$const3	15		%read{3,3} %write{2147483647,-1}
const	string	$const4	"clamp"		%read{2,1060} %write{2147483647,-1}
temp	float	$tmp1	%read{4,4} %write{3,3}
const	string	$const5	"1D"		%read{9,9} %write{2147483647,-1}
temp	int	$tmp2	%read{10,10} %write{9,9}
const	string	$const6	"multifractal"		%read{12,822} %write{2147483647,-1}
temp	int	$tmp3	%read{13,13} %write{12,12}
const	string	$const7	"noise_musgrave_multi_fractal_1d"		%read{14,14} %write{2147483647,-1}
const	float	$const8	1		%read{16,1061} %write{2147483647,-1}
temp	float	$tmp4	%read{19,19} %write{18,18}
const	int	$const9	0		%read{21,1114} %write{2147483647,-1}
temp	int	$tmp5	%read{22,38} %write{22,38}
temp	int	$tmp6	%read{22,38} %write{22,38}
temp	int	$tmp7	%read{20,38} %write{21,38}
temp	float	$tmp8	%read{22,38} %write{22,38}
const	string	$const10	"safe_snoise"		%read{25,1144} %write{2147483647,-1}
const	string	$const11	"snoise"		%read{26,1146} %write{2147483647,-1}
temp	int	$tmp9	%read{22,38} %write{22,38}
temp	float	$tmp10	%read{22,38} %write{22,38}
temp	float	$tmp11	%read{22,38} %write{22,38}
const	int	$const12	1		%read{38,1139} %write{2147483647,-1}
temp	int	$tmp12	%read{2147483647,-1} %write{22,38}
temp	float	$tmp13	%read{40,40} %write{39,39}
temp	int	$tmp14	%read{42,42} %write{41,41}
temp	float	$tmp15	%read{51,51} %write{43,43}
temp	float	$tmp16	%read{51,51} %write{48,50}
temp	int	$tmp17	%read{47,47} %write{46,46}
temp	float	$tmp18	%read{52,52} %write{51,51}
temp	float	$tmp19	%read{53,53} %write{52,52}
const	string	$const13	"fBM"		%read{55,879} %write{2147483647,-1}
temp	int	$tmp20	%read{56,56} %write{55,55}
const	string	$const14	"noise_musgrave_fBm_1d"		%read{57,57} %write{2147483647,-1}
temp	float	$tmp21	%read{62,62} %write{61,61}
temp	int	$tmp22	%read{65,80} %write{65,80}
temp	int	$tmp23	%read{65,80} %write{65,80}
temp	int	$tmp24	%read{63,80} %write{64,80}
temp	float	$tmp25	%read{65,80} %write{65,80}
temp	int	$tmp26	%read{65,80} %write{65,80}
temp	float	$tmp27	%read{65,80} %write{65,80}
temp	int	$tmp28	%read{2147483647,-1} %write{65,80}
temp	float	$tmp29	%read{82,82} %write{81,81}
temp	int	$tmp30	%read{84,84} %write{83,83}
temp	float	$tmp31	%read{92,92} %write{89,91}
temp	int	$tmp32	%read{88,88} %write{87,87}
temp	float	$tmp33	%read{93,93} %write{92,92}
temp	float	$tmp34	%read{94,94} %write{93,93}
const	string	$const15	"hybrid_multifractal"		%read{96,934} %write{2147483647,-1}
temp	int	$tmp35	%read{97,97} %write{96,96}
const	string	$const16	"noise_musgrave_hybrid_multi_fractal_1d"		%read{98,98} %write{2147483647,-1}
temp	float	$tmp36	%read{101,101} %write{100,100}
temp	float	$tmp37	%read{110,110} %write{107,109}
temp	int	$tmp38	%read{106,106} %write{105,105}
const	float	$const17	0.00100000005		%read{115,966} %write{2147483647,-1}
temp	int	$tmp39	%read{115,142} %write{115,142}
temp	int	$tmp40	%read{115,142} %write{115,142}
temp	int	$tmp41	%read{115,142} %write{115,142}
temp	int	$tmp42	%read{115,142} %write{115,142}
temp	int	$tmp43	%read{115,142} %write{115,142}
temp	int	$tmp44	%read{113,142} %write{114,142}
temp	int	$tmp45	%read{115,142} %write{115,142}
temp	float	$tmp46	%read{115,142} %write{115,142}
temp	int	$tmp47	%read{115,142} %write{115,142}
temp	float	$tmp48	%read{115,142} %write{115,142}
temp	float	$tmp49	%read{115,142} %write{115,142}
temp	float	$tmp50	%read{115,142} %write{115,142}
temp	int	$tmp51	%read{2147483647,-1} %write{115,142}
temp	float	$tmp52	%read{144,144} %write{143,143}
temp	int	$tmp53	%read{146,146} %write{145,145}
temp	float	$tmp54	%read{154,154} %write{151,153}
temp	int	$tmp55	%read{150,150} %write{149,149}
temp	float	$tmp56	%read{155,155} %write{154,154}
temp	float	$tmp57	%read{156,156} %write{155,155}
temp	float	$tmp58	%read{157,157} %write{156,156}
const	string	$const18	"ridged_multifractal"		%read{159,1021} %write{2147483647,-1}
temp	int	$tmp59	%read{160,160} %write{159,159}
const	string	$const19	"noise_musgrave_ridged_multi_fractal_1d"		%read{161,161} %write{2147483647,-1}
temp	float	$tmp60	%read{164,164} %write{163,163}
temp	float	$tmp61	%read{174,174} %write{173,173}
temp	float	$tmp62	%read{173,173} %write{170,172}
temp	int	$tmp63	%read{169,169} %write{168,168}
temp	int	$tmp64	%read{180,203} %write{180,203}
temp	int	$tmp65	%read{180,203} %write{180,203}
temp	int	$tmp66	%read{178,203} %write{179,203}
temp	float	$tmp67	%read{180,203} %write{180,203}
temp	float	$tmp68	%read{180,203} %write{180,203}
temp	float	$tmp69	%read{180,203} %write{180,203}
temp	float	$tmp70	%read{180,203} %write{180,203}
temp	int	$tmp71	%read{180,203} %write{180,203}
temp	float	$tmp72	%read{180,203} %write{180,203}
temp	int	$tmp73	%read{2147483647,-1} %write{180,203}
const	string	$const20	"hetero_terrain"		%read{205,1081} %write{2147483647,-1}
temp	int	$tmp74	%read{206,206} %write{205,205}
const	string	$const21	"noise_musgrave_hetero_terrain_1d"		%read{207,207} %write{2147483647,-1}
temp	float	$tmp75	%read{210,210} %write{209,209}
temp	float	$tmp76	%read{219,219} %write{216,218}
temp	int	$tmp77	%read{215,215} %write{214,214}
temp	int	$tmp78	%read{223,240} %write{223,240}
temp	int	$tmp79	%read{223,240} %write{223,240}
temp	int	$tmp80	%read{221,240} %write{222,240}
temp	float	$tmp81	%read{223,240} %write{223,240}
temp	int	$tmp82	%read{223,240} %write{223,240}
temp	float	$tmp83	%read{223,240} %write{223,240}
temp	float	$tmp84	%read{223,240} %write{223,240}
temp	int	$tmp85	%read{2147483647,-1} %write{223,240}
temp	float	$tmp86	%read{242,242} %write{241,241}
temp	int	$tmp87	%read{244,244} %write{243,243}
temp	float	$tmp88	%read{252,252} %write{249,251}
temp	int	$tmp89	%read{248,248} %write{247,247}
temp	float	$tmp90	%read{253,253} %write{252,252}
temp	float	$tmp91	%read{254,254} %write{253,253}
temp	float	$tmp92	%read{256,256} %write{255,255}
const	string	$const22	"2D"		%read{259,259} %write{2147483647,-1}
temp	int	$tmp93	%read{260,260} %write{259,259}
temp	float	$tmp94.x	%read{267,267} %write{261,261}
temp	float	$tmp94.y	%read{268,268} %write{262,262}
const	string	$const23	"__operator__mul__"		%read{263,1133} %write{2147483647,-1}
temp	float	$tmp95.x	%read{267,267} %write{264,264}
temp	float	$tmp95.y	%read{268,268} %write{265,265}
temp	int	$tmp96	%read{270,270} %write{269,269}
const	string	$const24	"noise_musgrave_multi_fractal_2d"		%read{271,271} %write{2147483647,-1}
temp	float	$tmp97	%read{277,277} %write{276,276}
temp	int	$tmp98	%read{280,301} %write{280,301}
temp	int	$tmp99	%read{280,301} %write{280,301}
temp	int	$tmp100	%read{278,301} %write{279,301}
temp	float	$tmp101	%read{280,301} %write{280,301}
temp	int	$tmp102	%read{280,301} %write{280,301}
temp	float	$tmp103	%read{280,301} %write{280,301}
temp	float	$tmp104	%read{280,301} %write{280,301}
temp	float	$tmp105.x	%read{280,301} %write{280,301}
temp	float	$tmp105.y	%read{280,301} %write{280,301}
temp	int	$tmp106	%read{2147483647,-1} %write{280,301}
temp	float	$tmp107	%read{303,303} %write{302,302}
temp	int	$tmp108	%read{305,305} %write{304,304}
temp	float	$tmp109	%read{314,314} %write{306,306}
temp	float	$tmp110	%read{314,314} %write{311,313}
temp	int	$tmp111	%read{310,310} %write{309,309}
temp	float	$tmp112	%read{315,315} %write{314,314}
temp	float	$tmp113	%read{316,316} %write{315,315}
temp	int	$tmp114	%read{319,319} %write{318,318}
const	string	$const25	"noise_musgrave_fBm_2d"		%read{320,320} %write{2147483647,-1}
temp	float	$tmp115	%read{326,326} %write{325,325}
temp	int	$tmp116	%read{329,349} %write{329,349}
temp	int	$tmp117	%read{329,349} %write{329,349}
temp	int	$tmp118	%read{327,349} %write{328,349}
temp	float	$tmp119	%read{329,349} %write{329,349}
temp	int	$tmp120	%read{329,349} %write{329,349}
temp	float	$tmp121	%read{329,349} %write{329,349}
temp	float	$tmp122.x	%read{329,349} %write{329,349}
temp	float	$tmp122.y	%read{329,349} %write{329,349}
temp	int	$tmp123	%read{2147483647,-1} %write{329,349}
temp	float	$tmp124	%read{351,351} %write{350,350}
temp	int	$tmp125	%read{353,353} %write{352,352}
temp	float	$tmp126	%read{361,361} %write{358,360}
temp	int	$tmp127	%read{357,357} %write{356,356}
temp	float	$tmp128	%read{362,362} %write{361,361}
temp	float	$tmp129	%read{363,363} %write{362,362}
temp	int	$tmp130	%read{366,366} %write{365,365}
const	string	$const26	"noise_musgrave_hybrid_multi_fractal_2d"		%read{367,367} %write{2147483647,-1}
temp	float	$tmp131	%read{371,371} %write{370,370}
temp	float	$tmp132	%read{380,380} %write{377,379}
temp	int	$tmp133	%read{376,376} %write{375,375}
temp	float	$tmp134.x	%read{386,386} %write{383,383}
temp	float	$tmp134.y	%read{387,387} %write{384,384}
temp	int	$tmp135	%read{390,422} %write{390,422}
temp	int	$tmp136	%read{390,422} %write{390,422}
temp	int	$tmp137	%read{390,422} %write{390,422}
temp	int	$tmp138	%read{390,422} %write{390,422}
temp	int	$tmp139	%read{390,422} %write{390,422}
temp	int	$tmp140	%read{388,422} %write{389,422}
temp	int	$tmp141	%read{390,422} %write{390,422}
temp	float	$tmp142	%read{390,422} %write{390,422}
temp	int	$tmp143	%read{390,422} %write{390,422}
temp	float	$tmp144	%read{390,422} %write{390,422}
temp	float	$tmp145	%read{390,422} %write{390,422}
temp	float	$tmp146	%read{390,422} %write{390,422}
temp	float	$tmp147.x	%read{390,422} %write{390,422}
temp	float	$tmp147.y	%read{390,422} %write{390,422}
temp	int	$tmp148	%read{2147483647,-1} %write{390,422}
temp	float	$tmp149	%read{424,424} %write{423,423}
temp	int	$tmp150	%read{426,426} %write{425,425}
temp	float	$tmp151	%read{434,434} %write{431,433}
temp	int	$tmp152	%read{430,430} %write{429,429}
temp	float	$tmp153	%read{435,435} %write{434,434}
temp	float	$tmp154	%read{436,436} %write{435,435}
temp	float	$tmp155	%read{437,437} %write{436,436}
temp	int	$tmp156	%read{440,440} %write{439,439}
const	string	$const27	"noise_musgrave_ridged_multi_fractal_2d"		%read{441,441} %write{2147483647,-1}
temp	float	$tmp157	%read{445,445} %write{444,444}
temp	float	$tmp158	%read{455,455} %write{454,454}
temp	float	$tmp159	%read{454,454} %write{451,453}
temp	int	$tmp160	%read{450,450} %write{449,449}
temp	int	$tmp161	%read{461,489} %write{461,489}
temp	int	$tmp162	%read{461,489} %write{461,489}
temp	int	$tmp163	%read{459,489} %write{460,489}
temp	float	$tmp164.x	%read{461,489} %write{461,489}
temp	float	$tmp164.y	%read{461,489} %write{461,489}
temp	float	$tmp165	%read{461,489} %write{461,489}
temp	float	$tmp166	%read{461,489} %write{461,489}
temp	float	$tmp167	%read{461,489} %write{461,489}
temp	float	$tmp168	%read{461,489} %write{461,489}
temp	int	$tmp169	%read{461,489} %write{461,489}
temp	float	$tmp170	%read{461,489} %write{461,489}
temp	int	$tmp171	%read{2147483647,-1} %write{461,489}
temp	int	$tmp172	%read{492,492} %write{491,491}
const	string	$const28	"noise_musgrave_hetero_terrain_2d"		%read{493,493} %write{2147483647,-1}
temp	float	$tmp173	%read{497,497} %write{496,496}
temp	float	$tmp174	%read{506,506} %write{503,505}
temp	int	$tmp175	%read{502,502} %write{501,501}
temp	float	$tmp176.x	%read{511,511} %write{508,508}
temp	float	$tmp176.y	%read{512,512} %write{509,509}
temp	int	$tmp177	%read{515,537} %write{515,537}
temp	int	$tmp178	%read{515,537} %write{515,537}
temp	int	$tmp179	%read{513,537} %write{514,537}
temp	float	$tmp180	%read{515,537} %write{515,537}
temp	int	$tmp181	%read{515,537} %write{515,537}
temp	float	$tmp182	%read{515,537} %write{515,537}
temp	float	$tmp183	%read{515,537} %write{515,537}
temp	float	$tmp184.x	%read{515,537} %write{515,537}
temp	float	$tmp184.y	%read{515,537} %write{515,537}
temp	int	$tmp185	%read{2147483647,-1} %write{515,537}
temp	float	$tmp186	%read{539,539} %write{538,538}
temp	int	$tmp187	%read{541,541} %write{540,540}
temp	float	$tmp188	%read{549,549} %write{546,548}
temp	int	$tmp189	%read{545,545} %write{544,544}
temp	float	$tmp190	%read{550,550} %write{549,549}
temp	float	$tmp191	%read{551,551} %write{550,550}
temp	float	$tmp192	%read{553,553} %write{552,552}
const	string	$const29	"3D"		%read{556,556} %write{2147483647,-1}
temp	int	$tmp193	%read{557,557} %write{556,556}
temp	int	$tmp194	%read{560,560} %write{559,559}
const	string	$const30	"noise_musgrave_multi_fractal_3d"		%read{561,561} %write{2147483647,-1}
temp	float	$tmp195	%read{566,566} %write{565,565}
temp	int	$tmp196	%read{569,585} %write{569,585}
temp	int	$tmp197	%read{569,585} %write{569,585}
temp	int	$tmp198	%read{567,585} %write{568,585}
temp	float	$tmp199	%read{569,585} %write{569,585}
temp	int	$tmp200	%read{569,585} %write{569,585}
temp	float	$tmp201	%read{569,585} %write{569,585}
temp	float	$tmp202	%read{569,585} %write{569,585}
temp	int	$tmp203	%read{2147483647,-1} %write{569,585}
temp	float	$tmp204	%read{587,587} %write{586,586}
temp	int	$tmp205	%read{589,589} %write{588,588}
temp	float	$tmp206	%read{598,598} %write{590,590}
temp	float	$tmp207	%read{598,598} %write{595,597}
temp	int	$tmp208	%read{594,594} %write{593,593}
temp	float	$tmp209	%read{599,599} %write{598,598}
temp	float	$tmp210	%read{600,600} %write{599,599}
temp	int	$tmp211	%read{603,603} %write{602,602}
const	string	$const31	"noise_musgrave_fBm_3d"		%read{604,604} %write{2147483647,-1}
temp	float	$tmp212	%read{609,609} %write{608,608}
temp	int	$tmp213	%read{612,627} %write{612,627}
temp	int	$tmp214	%read{612,627} %write{612,627}
temp	int	$tmp215	%read{610,627} %write{611,627}
temp	float	$tmp216	%read{612,627} %write{612,627}
temp	int	$tmp217	%read{612,627} %write{612,627}
temp	float	$tmp218	%read{612,627} %write{612,627}
temp	int	$tmp219	%read{2147483647,-1} %write{612,627}
temp	float	$tmp220	%read{629,629} %write{628,628}
temp	int	$tmp221	%read{631,631} %write{630,630}
temp	float	$tmp222	%read{639,639} %write{636,638}
temp	int	$tmp223	%read{635,635} %write{634,634}
temp	float	$tmp224	%read{640,640} %write{639,639}
temp	float	$tmp225	%read{641,641} %write{640,640}
temp	int	$tmp226	%read{644,644} %write{643,643}
const	string	$const32	"noise_musgrave_hybrid_multi_fractal_3d"		%read{645,645} %write{2147483647,-1}
temp	float	$tmp227	%read{648,648} %write{647,647}
temp	float	$tmp228	%read{657,657} %write{654,656}
temp	int	$tmp229	%read{653,653} %write{652,652}
temp	int	$tmp230	%read{662,689} %write{662,689}
temp	int	$tmp231	%read{662,689} %write{662,689}
temp	int	$tmp232	%read{662,689} %write{662,689}
temp	int	$tmp233	%read{662,689} %write{662,689}
temp	int	$tmp234	%read{662,689} %write{662,689}
temp	int	$tmp235	%read{660,689} %write{661,689}
temp	int	$tmp236	%read{662,689} %write{662,689}
temp	float	$tmp237	%read{662,689} %write{662,689}
temp	int	$tmp238	%read{662,689} %write{662,689}
temp	float	$tmp239	%read{662,689} %write{662,689}
temp	float	$tmp240	%read{662,689} %write{662,689}
temp	float	$tmp241	%read{662,689} %write{662,689}
temp	int	$tmp242	%read{2147483647,-1} %write{662,689}
temp	float	$tmp243	%read{691,691} %write{690,690}
temp	int	$tmp244	%read{693,693} %write{692,692}
temp	float	$tmp245	%read{701,701} %write{698,700}
temp	int	$tmp246	%read{697,697} %write{696,696}
temp	float	$tmp247	%read{702,702} %write{701,701}
temp	float	$tmp248	%read{703,703} %write{702,702}
temp	float	$tmp249	%read{704,704} %write{703,703}
temp	int	$tmp250	%read{707,707} %write{706,706}
const	string	$const33	"noise_musgrave_ridged_multi_fractal_3d"		%read{708,708} %write{2147483647,-1}
temp	float	$tmp251	%read{711,711} %write{710,710}
temp	float	$tmp252	%read{721,721} %write{720,720}
temp	float	$tmp253	%read{720,720} %write{717,719}
temp	int	$tmp254	%read{716,716} %write{715,715}
temp	int	$tmp255	%read{727,750} %write{727,750}
temp	int	$tmp256	%read{727,750} %write{727,750}
temp	int	$tmp257	%read{725,750} %write{726,750}
temp	float	$tmp258	%read{727,750} %write{727,750}
temp	float	$tmp259	%read{727,750} %write{727,750}
temp	float	$tmp260	%read{727,750} %write{727,750}
temp	float	$tmp261	%read{727,750} %write{727,750}
temp	int	$tmp262	%read{727,750} %write{727,750}
temp	float	$tmp263	%read{727,750} %write{727,750}
temp	int	$tmp264	%read{2147483647,-1} %write{727,750}
temp	int	$tmp265	%read{753,753} %write{752,752}
const	string	$const34	"noise_musgrave_hetero_terrain_3d"		%read{754,754} %write{2147483647,-1}
temp	float	$tmp266	%read{757,757} %write{756,756}
temp	float	$tmp267	%read{766,766} %write{763,765}
temp	int	$tmp268	%read{762,762} %write{761,761}
temp	int	$tmp269	%read{770,787} %write{770,787}
temp	int	$tmp270	%read{770,787} %write{770,787}
temp	int	$tmp271	%read{768,787} %write{769,787}
temp	float	$tmp272	%read{770,787} %write{770,787}
temp	int	$tmp273	%read{770,787} %write{770,787}
temp	float	$tmp274	%read{770,787} %write{770,787}
temp	float	$tmp275	%read{770,787} %write{770,787}
temp	int	$tmp276	%read{2147483647,-1} %write{770,787}
temp	float	$tmp277	%read{789,789} %write{788,788}
temp	int	$tmp278	%read{791,791} %write{790,790}
temp	float	$tmp279	%read{799,799} %write{796,798}
temp	int	$tmp280	%read{795,795} %write{794,794}
temp	float	$tmp281	%read{800,800} %write{799,799}
temp	float	$tmp282	%read{801,801} %write{800,800}
temp	float	$tmp283	%read{803,803} %write{802,802}
const	string	$const35	"4D"		%read{806,806} %write{2147483647,-1}
temp	int	$tmp284	%read{807,807} %write{806,806}
temp	float	$tmp285.x	%read{818,818} %write{808,808}
temp	float	$tmp285.y	%read{819,819} %write{809,809}
temp	float	$tmp285.z	%read{820,820} %write{810,810}
temp	float	$tmp285.w	%read{821,821} %write{811,811}
const	int	$const36	2		%read{810,810} %write{2147483647,-1}
temp	float	$tmp286.x	%read{818,818} %write{813,813}
temp	float	$tmp286.y	%read{819,819} %write{814,814}
temp	float	$tmp286.z	%read{820,820} %write{815,815}
temp	float	$tmp286.w	%read{821,821} %write{816,816}
temp	int	$tmp287	%read{823,823} %write{822,822}
const	string	$const37	"noise_musgrave_multi_fractal_4d"		%read{824,824} %write{2147483647,-1}
temp	float	$tmp288	%read{832,832} %write{831,831}
temp	int	$tmp289	%read{835,861} %write{835,861}
temp	int	$tmp290	%read{835,861} %write{835,861}
temp	int	$tmp291	%read{833,861} %write{834,861}
temp	float	$tmp292	%read{835,861} %write{835,861}
temp	point	$tmp293	%read{835,861} %write{835,861}
temp	int	$tmp294	%read{835,861} %write{835,861}
temp	float	$tmp295	%read{835,861} %write{835,861}
temp	float	$tmp296	%read{835,861} %write{835,861}
temp	float	$tmp297.x	%read{835,861} %write{835,861}
temp	float	$tmp297.y	%read{835,861} %write{835,861}
temp	float	$tmp297.z	%read{835,861} %write{835,861}
temp	float	$tmp297.w	%read{835,861} %write{835,861}
temp	int	$tmp298	%read{2147483647,-1} %write{835,861}
temp	float	$tmp299	%read{863,863} %write{862,862}
temp	int	$tmp300	%read{865,865} %write{864,864}
temp	float	$tmp301	%read{875,875} %write{866,866}
temp	float	$tmp302	%read{875,875} %write{872,874}
temp	point	$tmp303	%read{869,869} %write{868,868}
temp	int	$tmp304	%read{871,871} %write{870,870}
temp	float	$tmp305	%read{876,876} %write{875,875}
temp	float	$tmp306	%read{877,877} %write{876,876}
temp	int	$tmp307	%read{880,880} %write{879,879}
const	string	$const38	"noise_musgrave_fBm_4d"		%read{881,881} %write{2147483647,-1}
temp	float	$tmp308	%read{889,889} %write{888,888}
temp	int	$tmp309	%read{892,917} %write{892,917}
temp	int	$tmp310	%read{892,917} %write{892,917}
temp	int	$tmp311	%read{890,917} %write{891,917}
temp	float	$tmp312	%read{892,917} %write{892,917}
temp	point	$tmp313	%read{892,917} %write{892,917}
temp	int	$tmp314	%read{892,917} %write{892,917}
temp	float	$tmp315	%read{892,917} %write{892,917}
temp	float	$tmp316.x	%read{892,917} %write{892,917}
temp	float	$tmp316.y	%read{892,917} %write{892,917}
temp	float	$tmp316.z	%read{892,917} %write{892,917}
temp	float	$tmp316.w	%read{892,917} %write{892,917}
temp	int	$tmp317	%read{2147483647,-1} %write{892,917}
temp	float	$tmp318	%read{919,919} %write{918,918}
temp	int	$tmp319	%read{921,921} %write{920,920}
temp	float	$tmp320	%read{930,930} %write{927,929}
temp	point	$tmp321	%read{924,924} %write{923,923}
temp	int	$tmp322	%read{926,926} %write{925,925}
temp	float	$tmp323	%read{931,931} %write{930,930}
temp	float	$tmp324	%read{932,932} %write{931,931}
temp	int	$tmp325	%read{935,935} %write{934,934}
const	string	$const39	"noise_musgrave_hybrid_multi_fractal_4d"		%read{936,936} %write{2147483647,-1}
temp	float	$tmp326	%read{942,942} %write{941,941}
temp	float	$tmp327	%read{952,952} %write{949,951}
temp	point	$tmp328	%read{946,946} %write{945,945}
temp	int	$tmp329	%read{948,948} %write{947,947}
temp	float	$tmp330.x	%read{960,960} %write{955,955}
temp	float	$tmp330.y	%read{961,961} %write{956,956}
temp	float	$tmp330.z	%read{962,962} %write{957,957}
temp	float	$tmp330.w	%read{963,963} %write{958,958}
temp	int	$tmp331	%read{966,1003} %write{966,1003}
temp	int	$tmp332	%read{966,1003} %write{966,1003}
temp	int	$tmp333	%read{966,1003} %write{966,1003}
temp	int	$tmp334	%read{966,1003} %write{966,1003}
temp	int	$tmp335	%read{966,1003} %write{966,1003}
temp	int	$tmp336	%read{964,1003} %write{965,1003}
temp	int	$tmp337	%read{966,1003} %write{966,1003}
temp	float	$tmp338	%read{966,1003} %write{966,1003}
temp	point	$tmp339	%read{966,1003} %write{966,1003}
temp	int	$tmp340	%read{966,1003} %write{966,1003}
temp	float	$tmp341	%read{966,1003} %write{966,1003}
temp	float	$tmp342	%read{966,1003} %write{966,1003}
temp	float	$tmp343	%read{966,1003} %write{966,1003}
temp	float	$tmp344.x	%read{966,1003} %write{966,1003}
temp	float	$tmp344.y	%read{966,1003} %write{966,1003}
temp	float	$tmp344.z	%read{966,1003} %write{966,1003}
temp	float	$tmp344.w	%read{966,1003} %write{966,1003}
temp	int	$tmp345	%read{2147483647,-1} %write{966,1003}
temp	float	$tmp346	%read{1005,1005} %write{1004,1004}
temp	int	$tmp347	%read{1007,1007} %write{1006,1006}
temp	float	$tmp348	%read{1016,1016} %write{1013,1015}
temp	point	$tmp349	%read{1010,1010} %write{1009,1009}
temp	int	$tmp350	%read{1012,1012} %write{1011,1011}
temp	float	$tmp351	%read{1017,1017} %write{1016,1016}
temp	float	$tmp352	%read{1018,1018} %write{1017,1017}
temp	float	$tmp353	%read{1019,1019} %write{1018,1018}
temp	int	$tmp354	%read{1022,1022} %write{1021,1021}
const	string	$const40	"noise_musgrave_ridged_multi_fractal_4d"		%read{1023,1023} %write{2147483647,-1}
temp	float	$tmp355	%read{1029,1029} %write{1028,1028}
temp	float	$tmp356	%read{1040,1040} %write{1039,1039}
temp	float	$tmp357	%read{1039,1039} %write{1036,1038}
temp	point	$tmp358	%read{1033,1033} %write{1032,1032}
temp	int	$tmp359	%read{1035,1035} %write{1034,1034}
temp	int	$tmp360	%read{1046,1079} %write{1046,1079}
temp	int	$tmp361	%read{1046,1079} %write{1046,1079}
temp	int	$tmp362	%read{1044,1079} %write{1045,1079}
temp	float	$tmp363.x	%read{1046,1079} %write{1046,1079}
temp	float	$tmp363.y	%read{1046,1079} %write{1046,1079}
temp	float	$tmp363.z	%read{1046,1079} %write{1046,1079}
temp	float	$tmp363.w	%read{1046,1079} %write{1046,1079}
temp	float	$tmp364	%read{1046,1079} %write{1046,1079}
temp	float	$tmp365	%read{1046,1079} %write{1046,1079}
temp	float	$tmp366	%read{1046,1079} %write{1046,1079}
temp	float	$tmp367	%read{1046,1079} %write{1046,1079}
temp	point	$tmp368	%read{1046,1079} %write{1046,1079}
temp	int	$tmp369	%read{1046,1079} %write{1046,1079}
temp	float	$tmp370	%read{1046,1079} %write{1046,1079}
temp	int	$tmp371	%read{2147483647,-1} %write{1046,1079}
temp	int	$tmp372	%read{1082,1082} %write{1081,1081}
const	string	$const41	"noise_musgrave_hetero_terrain_4d"		%read{1083,1083} %write{2147483647,-1}
temp	float	$tmp373	%read{1089,1089} %write{1088,1088}
temp	float	$tmp374	%read{1099,1099} %write{1096,1098}
temp	point	$tmp375	%read{1093,1093} %write{1092,1092}
temp	int	$tmp376	%read{1095,1095} %write{1094,1094}
temp	float	$tmp377.x	%read{1106,1106} %write{1101,1101}
temp	float	$tmp377.y	%read{1107,1107} %write{1102,1102}
temp	float	$tmp377.z	%read{1108,1108} %write{1103,1103}
temp	float	$tmp377.w	%read{1109,1109} %write{1104,1104}
temp	int	$tmp378	%read{1112,1139} %write{1112,1139}
temp	int	$tmp379	%read{1112,1139} %write{1112,1139}
temp	int	$tmp380	%read{1110,1139} %write{1111,1139}
temp	float	$tmp381	%read{1112,1139} %write{1112,1139}
temp	point	$tmp382	%read{1112,1139} %write{1112,1139}
temp	int	$tmp383	%read{1112,1139} %write{1112,1139}
temp	float	$tmp384	%read{1112,1139} %write{1112,1139}
temp	float	$tmp385	%read{1112,1139} %write{1112,1139}
temp	float	$tmp386.x	%read{1112,1139} %write{1112,1139}
temp	float	$tmp386.y	%read{1112,1139} %write{1112,1139}
temp	float	$tmp386.z	%read{1112,1139} %write{1112,1139}
temp	float	$tmp386.w	%read{1112,1139} %write{1112,1139}
temp	int	$tmp387	%read{2147483647,-1} %write{1112,1139}
temp	float	$tmp388	%read{1141,1141} %write{1140,1140}
temp	int	$tmp389	%read{1143,1143} %write{1142,1142}
temp	float	$tmp390	%read{1152,1152} %write{1149,1151}
temp	point	$tmp391	%read{1146,1146} %write{1145,1145}
temp	int	$tmp392	%read{1148,1148} %write{1147,1147}
temp	float	$tmp393	%read{1153,1153} %write{1152,1152}
temp	float	$tmp394	%read{1154,1154} %write{1153,1153}
temp	float	$tmp395	%read{1156,1156} %write{1155,1155}
code Vector
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:676
#     point Vector = P,
	assign		Vector P 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{676} %argrw{"wr"}
code ___main___
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:686
#   float dimension = max(Dimension, 1e-5);
	max		dimension Dimension $const1 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{686} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:687
#   float octaves = clamp(Detail, 0.0, 15.0);
	functioncall	$const4 5 	%line{687} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp1 Detail $const3 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		octaves $tmp1 $const2 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:688
#   float lacunarity = max(Lacunarity, 1e-5);
	max		lacunarity Lacunarity $const1 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{688} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:690
#   vector3 s = Vector;
	assign		s Vector 	%line{690} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:692
#   if (use_mapping)
	if		use_mapping 9 9 	%line{692} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:693
#     s = transform(mapping, s);
	transform	s mapping s 	%line{693} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:695
#   if (dimensions == "1D") {
	eq		$tmp2 dimensions $const5 	%line{695} %argrw{"wrr"}
	if		$tmp2 259 1160 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:696
#     float p = W * Scale;
	mul		___588_p W Scale 	%line{696} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:697
#     if (musgrave_type == "multifractal") {
	eq		$tmp3 musgrave_type $const6 	%line{697} %argrw{"wrr"}
	if		$tmp3 55 259 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:698
#       Fac = noise_musgrave_multi_fractal_1d(p, dimension, lacunarity, octaves);
	functioncall	$const7 55 	%line{698} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:50
#   float p = co;
	assign		___512_p ___588_p 	%line{50} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:51
#   float value = 1.0;
	assign		___512_value $const8 	%line{51} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:52
#   float pwr = 1.0;
	assign		___512_pwr $const8 	%line{52} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:53
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp4 dimension 	%line{53} %argrw{"wr"}
	pow		___512_pwHL lacunarity $tmp4 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:55
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp7 22 25 37 39 	%line{55} %argrw{"r"}
	assign		___513_i $const9 	%argrw{"wr"}
	assign		$tmp5 octaves 	%argrw{"wr"}
	lt		$tmp6 ___513_i $tmp5 	%argrw{"wrr"}
	neq		$tmp7 $tmp6 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:56
#     value *= (pwr * safe_snoise(p) + 1.0);
	functioncall	$const10 32 	%line{56} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:43
#   float f = noise("snoise", p);
	noise		___446_f $const11 ___512_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{43} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:44
#   if (isinf(f))
	isinf		$tmp9 ___446_f 	%line{44} %argrw{"wr"}
	if		$tmp9 31 31 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:45
#     return 0.0;
	assign		$tmp8 $const2 	%line{45} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:46
#   return f;
	assign		$tmp8 ___446_f 	%line{46} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:56
#     value *= (pwr * safe_snoise(p) + 1.0);
	mul		$tmp10 ___512_pwr $tmp8 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{56} %argrw{"wrr"}
	add		$tmp11 $tmp10 $const8 	%argrw{"wrr"}
	mul		___512_value ___512_value $tmp11 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:57
#     pwr *= pwHL;
	mul		___512_pwr ___512_pwr ___512_pwHL 	%line{57} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:58
#     p *= lacunarity;
	mul		___512_p ___512_p lacunarity 	%line{58} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:55
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp12 ___513_i 	%line{55} %argrw{"wr"}
	add		___513_i ___513_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:61
#   float rmd = octaves - floor(octaves);
	floor		$tmp13 octaves 	%line{61} %argrw{"wr"}
	sub		___512_rmd octaves $tmp13 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:62
#   if (rmd != 0.0) {
	neq		$tmp14 ___512_rmd $const2 	%line{62} %argrw{"wrr"}
	if		$tmp14 54 54 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:63
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp15 ___512_rmd ___512_pwr 	%line{63} %argrw{"wrr"}
	functioncall	$const10 51 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:43
#   float f = noise("snoise", p);
	noise		___446_f $const11 ___512_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{43} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:44
#   if (isinf(f))
	isinf		$tmp17 ___446_f 	%line{44} %argrw{"wr"}
	if		$tmp17 50 50 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:45
#     return 0.0;
	assign		$tmp16 $const2 	%line{45} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:46
#   return f;
	assign		$tmp16 ___446_f 	%line{46} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:63
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp18 $tmp15 $tmp16 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{63} %argrw{"wrr"}
	add		$tmp19 $tmp18 $const8 	%argrw{"wrr"}
	mul		___512_value ___512_value $tmp19 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:66
#   return value;
	assign		Fac ___512_value 	%line{66} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:700
#     else if (musgrave_type == "fBM") {
	eq		$tmp20 musgrave_type $const13 	%line{700} %argrw{"wrr"}
	if		$tmp20 96 259 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:701
#       Fac = noise_musgrave_fBm_1d(p, dimension, lacunarity, octaves);
	functioncall	$const14 96 	%line{701} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:22
#   float p = co;
	assign		___508_p ___588_p 	%line{22} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:23
#   float value = 0.0;
	assign		___508_value $const2 	%line{23} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:24
#   float pwr = 1.0;
	assign		___508_pwr $const8 	%line{24} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:25
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp21 dimension 	%line{25} %argrw{"wr"}
	pow		___508_pwHL lacunarity $tmp21 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:27
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp24 65 68 79 81 	%line{27} %argrw{"r"}
	assign		___509_i $const9 	%argrw{"wr"}
	assign		$tmp22 octaves 	%argrw{"wr"}
	lt		$tmp23 ___509_i $tmp22 	%argrw{"wrr"}
	neq		$tmp24 $tmp23 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:28
#     value += safe_snoise(p) * pwr;
	functioncall	$const10 75 	%line{28} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:43
#   float f = noise("snoise", p);
	noise		___446_f $const11 ___508_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{43} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:44
#   if (isinf(f))
	isinf		$tmp26 ___446_f 	%line{44} %argrw{"wr"}
	if		$tmp26 74 74 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:45
#     return 0.0;
	assign		$tmp25 $const2 	%line{45} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:46
#   return f;
	assign		$tmp25 ___446_f 	%line{46} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:28
#     value += safe_snoise(p) * pwr;
	mul		$tmp27 $tmp25 ___508_pwr 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{28} %argrw{"wrr"}
	add		___508_value ___508_value $tmp27 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:29
#     pwr *= pwHL;
	mul		___508_pwr ___508_pwr ___508_pwHL 	%line{29} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:30
#     p *= lacunarity;
	mul		___508_p ___508_p lacunarity 	%line{30} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:27
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp28 ___509_i 	%line{27} %argrw{"wr"}
	add		___509_i ___509_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:33
#   float rmd = octaves - floor(octaves);
	floor		$tmp29 octaves 	%line{33} %argrw{"wr"}
	sub		___508_rmd octaves $tmp29 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:34
#   if (rmd != 0.0) {
	neq		$tmp30 ___508_rmd $const2 	%line{34} %argrw{"wrr"}
	if		$tmp30 95 95 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:35
#     value += rmd * safe_snoise(p) * pwr;
	functioncall	$const10 92 	%line{35} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:43
#   float f = noise("snoise", p);
	noise		___446_f $const11 ___508_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{43} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:44
#   if (isinf(f))
	isinf		$tmp32 ___446_f 	%line{44} %argrw{"wr"}
	if		$tmp32 91 91 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:45
#     return 0.0;
	assign		$tmp31 $const2 	%line{45} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:46
#   return f;
	assign		$tmp31 ___446_f 	%line{46} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:35
#     value += rmd * safe_snoise(p) * pwr;
	mul		$tmp33 ___508_rmd $tmp31 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{35} %argrw{"wrr"}
	mul		$tmp34 $tmp33 ___508_pwr 	%argrw{"wrr"}
	add		___508_value ___508_value $tmp34 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:38
#   return value;
	assign		Fac ___508_value 	%line{38} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:703
#     else if (musgrave_type == "hybrid_multifractal") {
	eq		$tmp35 musgrave_type $const15 	%line{703} %argrw{"wrr"}
	if		$tmp35 159 259 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:704
#       Fac = noise_musgrave_hybrid_multi_fractal_1d(
	functioncall	$const16 159 	%line{704} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:115
#   float p = co;
	assign		___520_p ___588_p 	%line{115} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:116
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp36 dimension 	%line{116} %argrw{"wr"}
	pow		___520_pwHL lacunarity $tmp36 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:117
#   float pwr = pwHL;
	assign		___520_pwr ___520_pwHL 	%line{117} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:119
#   float value = safe_snoise(p) + offset;
	functioncall	$const10 110 	%line{119} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:43
#   float f = noise("snoise", p);
	noise		___446_f $const11 ___520_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{43} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:44
#   if (isinf(f))
	isinf		$tmp38 ___446_f 	%line{44} %argrw{"wr"}
	if		$tmp38 109 109 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:45
#     return 0.0;
	assign		$tmp37 $const2 	%line{45} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:46
#   return f;
	assign		$tmp37 ___446_f 	%line{46} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:119
#   float value = safe_snoise(p) + offset;
	add		___520_value $tmp37 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{119} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:120
#   float weight = gain * value;
	mul		___520_weight Gain ___520_value 	%line{120} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:121
#   p *= lacunarity;
	mul		___520_p ___520_p lacunarity 	%line{121} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:123
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	for		$tmp44 115 123 141 143 	%line{123} %argrw{"r"}
	assign		___521_i $const12 	%argrw{"wr"}
	gt		$tmp39 ___520_weight $const17 	%argrw{"wrr"}
	neq		$tmp40 $tmp39 $const9 	%argrw{"wrr"}
	if		$tmp40 122 122 	%argrw{"r"}
	assign		$tmp41 octaves 	%argrw{"wr"}
	lt		$tmp42 ___521_i $tmp41 	%argrw{"wrr"}
	neq		$tmp43 $tmp42 $const9 	%argrw{"wrr"}
	assign		$tmp40 $tmp43 	%argrw{"wr"}
	neq		$tmp44 $tmp40 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:124
#     if (weight > 1.0) {
	gt		$tmp45 ___520_weight $const8 	%line{124} %argrw{"wrr"}
	if		$tmp45 126 126 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:125
#       weight = 1.0;
	assign		___520_weight $const8 	%line{125} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:128
#     float signal = (safe_snoise(p) + offset) * pwr;
	functioncall	$const10 133 	%line{128} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:43
#   float f = noise("snoise", p);
	noise		___446_f $const11 ___520_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{43} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:44
#   if (isinf(f))
	isinf		$tmp47 ___446_f 	%line{44} %argrw{"wr"}
	if		$tmp47 132 132 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:45
#     return 0.0;
	assign		$tmp46 $const2 	%line{45} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:46
#   return f;
	assign		$tmp46 ___446_f 	%line{46} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:128
#     float signal = (safe_snoise(p) + offset) * pwr;
	add		$tmp48 $tmp46 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{128} %argrw{"wrr"}
	mul		___522_signal $tmp48 ___520_pwr 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:129
#     pwr *= pwHL;
	mul		___520_pwr ___520_pwr ___520_pwHL 	%line{129} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:130
#     value += weight * signal;
	mul		$tmp49 ___520_weight ___522_signal 	%line{130} %argrw{"wrr"}
	add		___520_value ___520_value $tmp49 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:131
#     weight *= gain * signal;
	mul		$tmp50 Gain ___522_signal 	%line{131} %argrw{"wrr"}
	mul		___520_weight ___520_weight $tmp50 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:132
#     p *= lacunarity;
	mul		___520_p ___520_p lacunarity 	%line{132} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:123
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	assign		$tmp51 ___521_i 	%line{123} %argrw{"wr"}
	add		___521_i ___521_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:135
#   float rmd = octaves - floor(octaves);
	floor		$tmp52 octaves 	%line{135} %argrw{"wr"}
	sub		___520_rmd octaves $tmp52 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:136
#   if (rmd != 0.0) {
	neq		$tmp53 ___520_rmd $const2 	%line{136} %argrw{"wrr"}
	if		$tmp53 158 158 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:137
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	functioncall	$const10 154 	%line{137} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:43
#   float f = noise("snoise", p);
	noise		___446_f $const11 ___520_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{43} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:44
#   if (isinf(f))
	isinf		$tmp55 ___446_f 	%line{44} %argrw{"wr"}
	if		$tmp55 153 153 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:45
#     return 0.0;
	assign		$tmp54 $const2 	%line{45} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:46
#   return f;
	assign		$tmp54 ___446_f 	%line{46} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:137
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	add		$tmp56 $tmp54 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{137} %argrw{"wrr"}
	mul		$tmp57 $tmp56 ___520_pwr 	%argrw{"wrr"}
	mul		$tmp58 ___520_rmd $tmp57 	%argrw{"wrr"}
	add		___520_value ___520_value $tmp58 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:140
#   return value;
	assign		Fac ___520_value 	%line{140} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:707
#     else if (musgrave_type == "ridged_multifractal") {
	eq		$tmp59 musgrave_type $const18 	%line{707} %argrw{"wrr"}
	if		$tmp59 205 259 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:708
#       Fac = noise_musgrave_ridged_multi_fractal_1d(
	functioncall	$const19 205 	%line{708} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:154
#   float p = co;
	assign		___525_p ___588_p 	%line{154} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:155
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp60 dimension 	%line{155} %argrw{"wr"}
	pow		___525_pwHL lacunarity $tmp60 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:156
#   float pwr = pwHL;
	assign		___525_pwr ___525_pwHL 	%line{156} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:158
#   float signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 173 	%line{158} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:43
#   float f = noise("snoise", p);
	noise		___446_f $const11 ___525_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{43} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:44
#   if (isinf(f))
	isinf		$tmp63 ___446_f 	%line{44} %argrw{"wr"}
	if		$tmp63 172 172 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:45
#     return 0.0;
	assign		$tmp62 $const2 	%line{45} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:46
#   return f;
	assign		$tmp62 ___446_f 	%line{46} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:158
#   float signal = offset - fabs(safe_snoise(p));
	fabs		$tmp61 $tmp62 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{158} %argrw{"wr"}
	sub		___525_signal Offset $tmp61 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:159
#   signal *= signal;
	mul		___525_signal ___525_signal ___525_signal 	%line{159} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:160
#   float value = signal;
	assign		___525_value ___525_signal 	%line{160} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:161
#   float weight = 1.0;
	assign		___525_weight $const8 	%line{161} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:163
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp66 180 183 202 204 	%line{163} %argrw{"r"}
	assign		___526_i $const12 	%argrw{"wr"}
	assign		$tmp64 octaves 	%argrw{"wr"}
	lt		$tmp65 ___526_i $tmp64 	%argrw{"wrr"}
	neq		$tmp66 $tmp65 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:164
#     p *= lacunarity;
	mul		___525_p ___525_p lacunarity 	%line{164} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:165
#     weight = clamp(signal * gain, 0.0, 1.0);
	mul		$tmp67 ___525_signal Gain 	%line{165} %argrw{"wrr"}
	functioncall	$const4 188 	%argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp68 $tmp67 $const8 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___525_weight $tmp68 $const2 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:166
#     signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 195 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{166} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:43
#   float f = noise("snoise", p);
	noise		___446_f $const11 ___525_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{43} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:44
#   if (isinf(f))
	isinf		$tmp71 ___446_f 	%line{44} %argrw{"wr"}
	if		$tmp71 194 194 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:45
#     return 0.0;
	assign		$tmp70 $const2 	%line{45} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:46
#   return f;
	assign		$tmp70 ___446_f 	%line{46} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:166
#     signal = offset - fabs(safe_snoise(p));
	fabs		$tmp69 $tmp70 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{166} %argrw{"wr"}
	sub		___525_signal Offset $tmp69 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:167
#     signal *= signal;
	mul		___525_signal ___525_signal ___525_signal 	%line{167} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:168
#     signal *= weight;
	mul		___525_signal ___525_signal ___525_weight 	%line{168} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:169
#     value += signal * pwr;
	mul		$tmp72 ___525_signal ___525_pwr 	%line{169} %argrw{"wrr"}
	add		___525_value ___525_value $tmp72 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:170
#     pwr *= pwHL;
	mul		___525_pwr ___525_pwr ___525_pwHL 	%line{170} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:163
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp73 ___526_i 	%line{163} %argrw{"wr"}
	add		___526_i ___526_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:173
#   return value;
	assign		Fac ___525_value 	%line{173} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:711
#     else if (musgrave_type == "hetero_terrain") {
	eq		$tmp74 musgrave_type $const20 	%line{711} %argrw{"wrr"}
	if		$tmp74 258 259 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:712
#       Fac = noise_musgrave_hetero_terrain_1d(p, dimension, lacunarity, octaves, Offset);
	functioncall	$const21 258 	%line{712} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:80
#   float p = co;
	assign		___516_p ___588_p 	%line{80} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:81
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp75 dimension 	%line{81} %argrw{"wr"}
	pow		___516_pwHL lacunarity $tmp75 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:82
#   float pwr = pwHL;
	assign		___516_pwr ___516_pwHL 	%line{82} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:85
#   float value = offset + safe_snoise(p);
	functioncall	$const10 219 	%line{85} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:43
#   float f = noise("snoise", p);
	noise		___446_f $const11 ___516_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{43} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:44
#   if (isinf(f))
	isinf		$tmp77 ___446_f 	%line{44} %argrw{"wr"}
	if		$tmp77 218 218 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:45
#     return 0.0;
	assign		$tmp76 $const2 	%line{45} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:46
#   return f;
	assign		$tmp76 ___446_f 	%line{46} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:85
#   float value = offset + safe_snoise(p);
	add		___516_value Offset $tmp76 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{85} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:86
#   p *= lacunarity;
	mul		___516_p ___516_p lacunarity 	%line{86} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:88
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp80 223 226 239 241 	%line{88} %argrw{"r"}
	assign		___517_i $const12 	%argrw{"wr"}
	assign		$tmp78 octaves 	%argrw{"wr"}
	lt		$tmp79 ___517_i $tmp78 	%argrw{"wrr"}
	neq		$tmp80 $tmp79 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:89
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 233 	%line{89} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:43
#   float f = noise("snoise", p);
	noise		___446_f $const11 ___516_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{43} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:44
#   if (isinf(f))
	isinf		$tmp82 ___446_f 	%line{44} %argrw{"wr"}
	if		$tmp82 232 232 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:45
#     return 0.0;
	assign		$tmp81 $const2 	%line{45} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:46
#   return f;
	assign		$tmp81 ___446_f 	%line{46} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:89
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp83 $tmp81 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{89} %argrw{"wrr"}
	mul		$tmp84 $tmp83 ___516_pwr 	%argrw{"wrr"}
	mul		___518_increment $tmp84 ___516_value 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:90
#     value += increment;
	add		___516_value ___516_value ___518_increment 	%line{90} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:91
#     pwr *= pwHL;
	mul		___516_pwr ___516_pwr ___516_pwHL 	%line{91} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:92
#     p *= lacunarity;
	mul		___516_p ___516_p lacunarity 	%line{92} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:88
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp85 ___517_i 	%line{88} %argrw{"wr"}
	add		___517_i ___517_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:95
#   float rmd = octaves - floor(octaves);
	floor		$tmp86 octaves 	%line{95} %argrw{"wr"}
	sub		___516_rmd octaves $tmp86 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:96
#   if (rmd != 0.0) {
	neq		$tmp87 ___516_rmd $const2 	%line{96} %argrw{"wrr"}
	if		$tmp87 257 257 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:97
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 252 	%line{97} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:43
#   float f = noise("snoise", p);
	noise		___446_f $const11 ___516_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{43} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:44
#   if (isinf(f))
	isinf		$tmp89 ___446_f 	%line{44} %argrw{"wr"}
	if		$tmp89 251 251 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:45
#     return 0.0;
	assign		$tmp88 $const2 	%line{45} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:46
#   return f;
	assign		$tmp88 ___446_f 	%line{46} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:97
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp90 $tmp88 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{97} %argrw{"wrr"}
	mul		$tmp91 $tmp90 ___516_pwr 	%argrw{"wrr"}
	mul		___519_increment $tmp91 ___516_value 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:98
#     value += rmd * increment;
	mul		$tmp92 ___516_rmd ___519_increment 	%line{98} %argrw{"wrr"}
	add		___516_value ___516_value $tmp92 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:101
#   return value;
	assign		Fac ___516_value 	%line{101} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:715
#       Fac = 0.0;
	assign		Fac $const2 	%line{715} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:718
#   else if (dimensions == "2D") {
	eq		$tmp93 dimensions $const22 	%line{718} %argrw{"wrr"}
	if		$tmp93 556 1160 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:719
#     vector2 p = vector2(s[0], s[1]) * Scale;
	compref		$tmp94.x s $const9 	%line{719} %argrw{"wrr"}
	compref		$tmp94.y s $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 269 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp95.x Scale 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp95.y Scale 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 269 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___595_p.x $tmp94.x $tmp95.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___595_p.y $tmp94.y $tmp95.y 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:720
#     if (musgrave_type == "multifractal") {
	eq		$tmp96 musgrave_type $const6 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{720} %argrw{"wrr"}
	if		$tmp96 318 556 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:721
#       Fac = noise_musgrave_multi_fractal_2d(p, dimension, lacunarity, octaves);
	functioncall	$const24 318 	%line{721} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:215
#   vector2 p = co;
	assign		___532_p.x ___595_p.x 	%line{215} %argrw{"wr"}
	assign		___532_p.y ___595_p.y 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:216
#   float value = 1.0;
	assign		___532_value $const8 	%line{216} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:217
#   float pwr = 1.0;
	assign		___532_pwr $const8 	%line{217} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:218
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp97 dimension 	%line{218} %argrw{"wr"}
	pow		___532_pwHL lacunarity $tmp97 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:220
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp100 280 283 300 302 	%line{220} %argrw{"r"}
	assign		___533_i $const9 	%argrw{"wr"}
	assign		$tmp98 octaves 	%argrw{"wr"}
	lt		$tmp99 ___533_i $tmp98 	%argrw{"wrr"}
	neq		$tmp100 $tmp99 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:221
#     value *= (pwr * safe_snoise(p) + 1.0);
	functioncall	$const10 290 	%line{221} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:51
#   float f = noise("snoise", p.x, p.y);
	noise		___447_f $const11 ___532_p.x ___532_p.y 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{51} %argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:52
#   if (isinf(f))
	isinf		$tmp102 ___447_f 	%line{52} %argrw{"wr"}
	if		$tmp102 289 289 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:53
#     return 0.0;
	assign		$tmp101 $const2 	%line{53} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:54
#   return f;
	assign		$tmp101 ___447_f 	%line{54} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:221
#     value *= (pwr * safe_snoise(p) + 1.0);
	mul		$tmp103 ___532_pwr $tmp101 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{221} %argrw{"wrr"}
	add		$tmp104 $tmp103 $const8 	%argrw{"wrr"}
	mul		___532_value ___532_value $tmp104 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:222
#     pwr *= pwHL;
	mul		___532_pwr ___532_pwr ___532_pwHL 	%line{222} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 300 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp105.x lacunarity 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp105.y lacunarity 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 300 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___532_p.x ___532_p.x $tmp105.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___532_p.y ___532_p.y $tmp105.y 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:220
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp106 ___533_i 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{220} %argrw{"wr"}
	add		___533_i ___533_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:226
#   float rmd = octaves - floor(octaves);
	floor		$tmp107 octaves 	%line{226} %argrw{"wr"}
	sub		___532_rmd octaves $tmp107 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:227
#   if (rmd != 0.0) {
	neq		$tmp108 ___532_rmd $const2 	%line{227} %argrw{"wrr"}
	if		$tmp108 317 317 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:228
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp109 ___532_rmd ___532_pwr 	%line{228} %argrw{"wrr"}
	functioncall	$const10 314 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:51
#   float f = noise("snoise", p.x, p.y);
	noise		___447_f $const11 ___532_p.x ___532_p.y 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{51} %argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:52
#   if (isinf(f))
	isinf		$tmp111 ___447_f 	%line{52} %argrw{"wr"}
	if		$tmp111 313 313 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:53
#     return 0.0;
	assign		$tmp110 $const2 	%line{53} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:54
#   return f;
	assign		$tmp110 ___447_f 	%line{54} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:228
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp112 $tmp109 $tmp110 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{228} %argrw{"wrr"}
	add		$tmp113 $tmp112 $const8 	%argrw{"wrr"}
	mul		___532_value ___532_value $tmp113 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:231
#   return value;
	assign		Fac ___532_value 	%line{231} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:723
#     else if (musgrave_type == "fBM") {
	eq		$tmp114 musgrave_type $const13 	%line{723} %argrw{"wrr"}
	if		$tmp114 365 556 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:724
#       Fac = noise_musgrave_fBm_2d(p, dimension, lacunarity, octaves);
	functioncall	$const25 365 	%line{724} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:187
#   vector2 p = co;
	assign		___528_p.x ___595_p.x 	%line{187} %argrw{"wr"}
	assign		___528_p.y ___595_p.y 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:188
#   float value = 0.0;
	assign		___528_value $const2 	%line{188} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:189
#   float pwr = 1.0;
	assign		___528_pwr $const8 	%line{189} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:190
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp115 dimension 	%line{190} %argrw{"wr"}
	pow		___528_pwHL lacunarity $tmp115 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:192
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp118 329 332 348 350 	%line{192} %argrw{"r"}
	assign		___529_i $const9 	%argrw{"wr"}
	assign		$tmp116 octaves 	%argrw{"wr"}
	lt		$tmp117 ___529_i $tmp116 	%argrw{"wrr"}
	neq		$tmp118 $tmp117 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:193
#     value += safe_snoise(p) * pwr;
	functioncall	$const10 339 	%line{193} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:51
#   float f = noise("snoise", p.x, p.y);
	noise		___447_f $const11 ___528_p.x ___528_p.y 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{51} %argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:52
#   if (isinf(f))
	isinf		$tmp120 ___447_f 	%line{52} %argrw{"wr"}
	if		$tmp120 338 338 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:53
#     return 0.0;
	assign		$tmp119 $const2 	%line{53} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:54
#   return f;
	assign		$tmp119 ___447_f 	%line{54} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:193
#     value += safe_snoise(p) * pwr;
	mul		$tmp121 $tmp119 ___528_pwr 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{193} %argrw{"wrr"}
	add		___528_value ___528_value $tmp121 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:194
#     pwr *= pwHL;
	mul		___528_pwr ___528_pwr ___528_pwHL 	%line{194} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 348 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp122.x lacunarity 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp122.y lacunarity 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 348 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___528_p.x ___528_p.x $tmp122.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___528_p.y ___528_p.y $tmp122.y 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:192
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp123 ___529_i 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{192} %argrw{"wr"}
	add		___529_i ___529_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:198
#   float rmd = octaves - floor(octaves);
	floor		$tmp124 octaves 	%line{198} %argrw{"wr"}
	sub		___528_rmd octaves $tmp124 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:199
#   if (rmd != 0.0) {
	neq		$tmp125 ___528_rmd $const2 	%line{199} %argrw{"wrr"}
	if		$tmp125 364 364 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:200
#     value += rmd * safe_snoise(p) * pwr;
	functioncall	$const10 361 	%line{200} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:51
#   float f = noise("snoise", p.x, p.y);
	noise		___447_f $const11 ___528_p.x ___528_p.y 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{51} %argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:52
#   if (isinf(f))
	isinf		$tmp127 ___447_f 	%line{52} %argrw{"wr"}
	if		$tmp127 360 360 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:53
#     return 0.0;
	assign		$tmp126 $const2 	%line{53} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:54
#   return f;
	assign		$tmp126 ___447_f 	%line{54} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:200
#     value += rmd * safe_snoise(p) * pwr;
	mul		$tmp128 ___528_rmd $tmp126 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{200} %argrw{"wrr"}
	mul		$tmp129 $tmp128 ___528_pwr 	%argrw{"wrr"}
	add		___528_value ___528_value $tmp129 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:203
#   return value;
	assign		Fac ___528_value 	%line{203} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:726
#     else if (musgrave_type == "hybrid_multifractal") {
	eq		$tmp130 musgrave_type $const15 	%line{726} %argrw{"wrr"}
	if		$tmp130 439 556 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:727
#       Fac = noise_musgrave_hybrid_multi_fractal_2d(
	functioncall	$const26 439 	%line{727} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:280
#   vector2 p = co;
	assign		___540_p.x ___595_p.x 	%line{280} %argrw{"wr"}
	assign		___540_p.y ___595_p.y 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:281
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp131 dimension 	%line{281} %argrw{"wr"}
	pow		___540_pwHL lacunarity $tmp131 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:282
#   float pwr = pwHL;
	assign		___540_pwr ___540_pwHL 	%line{282} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:284
#   float value = safe_snoise(p) + offset;
	functioncall	$const10 380 	%line{284} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:51
#   float f = noise("snoise", p.x, p.y);
	noise		___447_f $const11 ___540_p.x ___540_p.y 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{51} %argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:52
#   if (isinf(f))
	isinf		$tmp133 ___447_f 	%line{52} %argrw{"wr"}
	if		$tmp133 379 379 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:53
#     return 0.0;
	assign		$tmp132 $const2 	%line{53} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:54
#   return f;
	assign		$tmp132 ___447_f 	%line{54} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:284
#   float value = safe_snoise(p) + offset;
	add		___540_value $tmp132 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{284} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:285
#   float weight = gain * value;
	mul		___540_weight Gain ___540_value 	%line{285} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 388 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp134.x lacunarity 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp134.y lacunarity 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 388 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___540_p.x ___540_p.x $tmp134.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___540_p.y ___540_p.y $tmp134.y 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:288
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	for		$tmp140 390 398 421 423 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{288} %argrw{"r"}
	assign		___541_i $const12 	%argrw{"wr"}
	gt		$tmp135 ___540_weight $const17 	%argrw{"wrr"}
	neq		$tmp136 $tmp135 $const9 	%argrw{"wrr"}
	if		$tmp136 397 397 	%argrw{"r"}
	assign		$tmp137 octaves 	%argrw{"wr"}
	lt		$tmp138 ___541_i $tmp137 	%argrw{"wrr"}
	neq		$tmp139 $tmp138 $const9 	%argrw{"wrr"}
	assign		$tmp136 $tmp139 	%argrw{"wr"}
	neq		$tmp140 $tmp136 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:289
#     if (weight > 1.0) {
	gt		$tmp141 ___540_weight $const8 	%line{289} %argrw{"wrr"}
	if		$tmp141 401 401 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:290
#       weight = 1.0;
	assign		___540_weight $const8 	%line{290} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:293
#     float signal = (safe_snoise(p) + offset) * pwr;
	functioncall	$const10 408 	%line{293} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:51
#   float f = noise("snoise", p.x, p.y);
	noise		___447_f $const11 ___540_p.x ___540_p.y 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{51} %argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:52
#   if (isinf(f))
	isinf		$tmp143 ___447_f 	%line{52} %argrw{"wr"}
	if		$tmp143 407 407 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:53
#     return 0.0;
	assign		$tmp142 $const2 	%line{53} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:54
#   return f;
	assign		$tmp142 ___447_f 	%line{54} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:293
#     float signal = (safe_snoise(p) + offset) * pwr;
	add		$tmp144 $tmp142 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{293} %argrw{"wrr"}
	mul		___542_signal $tmp144 ___540_pwr 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:294
#     pwr *= pwHL;
	mul		___540_pwr ___540_pwr ___540_pwHL 	%line{294} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:295
#     value += weight * signal;
	mul		$tmp145 ___540_weight ___542_signal 	%line{295} %argrw{"wrr"}
	add		___540_value ___540_value $tmp145 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:296
#     weight *= gain * signal;
	mul		$tmp146 Gain ___542_signal 	%line{296} %argrw{"wrr"}
	mul		___540_weight ___540_weight $tmp146 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 421 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp147.x lacunarity 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp147.y lacunarity 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 421 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___540_p.x ___540_p.x $tmp147.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___540_p.y ___540_p.y $tmp147.y 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:288
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	assign		$tmp148 ___541_i 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{288} %argrw{"wr"}
	add		___541_i ___541_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:300
#   float rmd = octaves - floor(octaves);
	floor		$tmp149 octaves 	%line{300} %argrw{"wr"}
	sub		___540_rmd octaves $tmp149 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:301
#   if (rmd != 0.0) {
	neq		$tmp150 ___540_rmd $const2 	%line{301} %argrw{"wrr"}
	if		$tmp150 438 438 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:302
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	functioncall	$const10 434 	%line{302} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:51
#   float f = noise("snoise", p.x, p.y);
	noise		___447_f $const11 ___540_p.x ___540_p.y 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{51} %argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:52
#   if (isinf(f))
	isinf		$tmp152 ___447_f 	%line{52} %argrw{"wr"}
	if		$tmp152 433 433 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:53
#     return 0.0;
	assign		$tmp151 $const2 	%line{53} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:54
#   return f;
	assign		$tmp151 ___447_f 	%line{54} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:302
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	add		$tmp153 $tmp151 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{302} %argrw{"wrr"}
	mul		$tmp154 $tmp153 ___540_pwr 	%argrw{"wrr"}
	mul		$tmp155 ___540_rmd $tmp154 	%argrw{"wrr"}
	add		___540_value ___540_value $tmp155 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:305
#   return value;
	assign		Fac ___540_value 	%line{305} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:730
#     else if (musgrave_type == "ridged_multifractal") {
	eq		$tmp156 musgrave_type $const18 	%line{730} %argrw{"wrr"}
	if		$tmp156 491 556 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:731
#       Fac = noise_musgrave_ridged_multi_fractal_2d(
	functioncall	$const27 491 	%line{731} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:319
#   vector2 p = co;
	assign		___545_p.x ___595_p.x 	%line{319} %argrw{"wr"}
	assign		___545_p.y ___595_p.y 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:320
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp157 dimension 	%line{320} %argrw{"wr"}
	pow		___545_pwHL lacunarity $tmp157 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:321
#   float pwr = pwHL;
	assign		___545_pwr ___545_pwHL 	%line{321} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:323
#   float signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 454 	%line{323} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:51
#   float f = noise("snoise", p.x, p.y);
	noise		___447_f $const11 ___545_p.x ___545_p.y 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{51} %argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:52
#   if (isinf(f))
	isinf		$tmp160 ___447_f 	%line{52} %argrw{"wr"}
	if		$tmp160 453 453 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:53
#     return 0.0;
	assign		$tmp159 $const2 	%line{53} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:54
#   return f;
	assign		$tmp159 ___447_f 	%line{54} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:323
#   float signal = offset - fabs(safe_snoise(p));
	fabs		$tmp158 $tmp159 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{323} %argrw{"wr"}
	sub		___545_signal Offset $tmp158 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:324
#   signal *= signal;
	mul		___545_signal ___545_signal ___545_signal 	%line{324} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:325
#   float value = signal;
	assign		___545_value ___545_signal 	%line{325} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:326
#   float weight = 1.0;
	assign		___545_weight $const8 	%line{326} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:328
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp163 461 464 488 490 	%line{328} %argrw{"r"}
	assign		___546_i $const12 	%argrw{"wr"}
	assign		$tmp161 octaves 	%argrw{"wr"}
	lt		$tmp162 ___546_i $tmp161 	%argrw{"wrr"}
	neq		$tmp163 $tmp162 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 470 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp164.x lacunarity 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp164.y lacunarity 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 470 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___545_p.x ___545_p.x $tmp164.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___545_p.y ___545_p.y $tmp164.y 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:330
#     weight = clamp(signal * gain, 0.0, 1.0);
	mul		$tmp165 ___545_signal Gain 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{330} %argrw{"wrr"}
	functioncall	$const4 474 	%argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp166 $tmp165 $const8 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___545_weight $tmp166 $const2 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:331
#     signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 481 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{331} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:51
#   float f = noise("snoise", p.x, p.y);
	noise		___447_f $const11 ___545_p.x ___545_p.y 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{51} %argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:52
#   if (isinf(f))
	isinf		$tmp169 ___447_f 	%line{52} %argrw{"wr"}
	if		$tmp169 480 480 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:53
#     return 0.0;
	assign		$tmp168 $const2 	%line{53} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:54
#   return f;
	assign		$tmp168 ___447_f 	%line{54} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:331
#     signal = offset - fabs(safe_snoise(p));
	fabs		$tmp167 $tmp168 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{331} %argrw{"wr"}
	sub		___545_signal Offset $tmp167 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:332
#     signal *= signal;
	mul		___545_signal ___545_signal ___545_signal 	%line{332} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:333
#     signal *= weight;
	mul		___545_signal ___545_signal ___545_weight 	%line{333} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:334
#     value += signal * pwr;
	mul		$tmp170 ___545_signal ___545_pwr 	%line{334} %argrw{"wrr"}
	add		___545_value ___545_value $tmp170 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:335
#     pwr *= pwHL;
	mul		___545_pwr ___545_pwr ___545_pwHL 	%line{335} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:328
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp171 ___546_i 	%line{328} %argrw{"wr"}
	add		___546_i ___546_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:338
#   return value;
	assign		Fac ___545_value 	%line{338} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:734
#     else if (musgrave_type == "hetero_terrain") {
	eq		$tmp172 musgrave_type $const20 	%line{734} %argrw{"wrr"}
	if		$tmp172 555 556 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:735
#       Fac = noise_musgrave_hetero_terrain_2d(p, dimension, lacunarity, octaves, Offset);
	functioncall	$const28 555 	%line{735} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:245
#   vector2 p = co;
	assign		___536_p.x ___595_p.x 	%line{245} %argrw{"wr"}
	assign		___536_p.y ___595_p.y 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:246
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp173 dimension 	%line{246} %argrw{"wr"}
	pow		___536_pwHL lacunarity $tmp173 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:247
#   float pwr = pwHL;
	assign		___536_pwr ___536_pwHL 	%line{247} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:250
#   float value = offset + safe_snoise(p);
	functioncall	$const10 506 	%line{250} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:51
#   float f = noise("snoise", p.x, p.y);
	noise		___447_f $const11 ___536_p.x ___536_p.y 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{51} %argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:52
#   if (isinf(f))
	isinf		$tmp175 ___447_f 	%line{52} %argrw{"wr"}
	if		$tmp175 505 505 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:53
#     return 0.0;
	assign		$tmp174 $const2 	%line{53} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:54
#   return f;
	assign		$tmp174 ___447_f 	%line{54} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:250
#   float value = offset + safe_snoise(p);
	add		___536_value Offset $tmp174 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{250} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 513 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp176.x lacunarity 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp176.y lacunarity 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 513 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___536_p.x ___536_p.x $tmp176.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___536_p.y ___536_p.y $tmp176.y 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:253
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp179 515 518 536 538 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{253} %argrw{"r"}
	assign		___537_i $const12 	%argrw{"wr"}
	assign		$tmp177 octaves 	%argrw{"wr"}
	lt		$tmp178 ___537_i $tmp177 	%argrw{"wrr"}
	neq		$tmp179 $tmp178 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:254
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 525 	%line{254} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:51
#   float f = noise("snoise", p.x, p.y);
	noise		___447_f $const11 ___536_p.x ___536_p.y 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{51} %argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:52
#   if (isinf(f))
	isinf		$tmp181 ___447_f 	%line{52} %argrw{"wr"}
	if		$tmp181 524 524 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:53
#     return 0.0;
	assign		$tmp180 $const2 	%line{53} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:54
#   return f;
	assign		$tmp180 ___447_f 	%line{54} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:254
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp182 $tmp180 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{254} %argrw{"wrr"}
	mul		$tmp183 $tmp182 ___536_pwr 	%argrw{"wrr"}
	mul		___538_increment $tmp183 ___536_value 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:255
#     value += increment;
	add		___536_value ___536_value ___538_increment 	%line{255} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:256
#     pwr *= pwHL;
	mul		___536_pwr ___536_pwr ___536_pwHL 	%line{256} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 536 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:88
#     return a * vector2(b, b);
	assign		$tmp184.x lacunarity 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{88} %argrw{"wr"}
	assign		$tmp184.y lacunarity 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 536 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h:78
#     return vector2(a.x * b.x, a.y * b.y);
	mul		___536_p.x ___536_p.x $tmp184.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector2.h"} %line{78} %argrw{"wrr"}
	mul		___536_p.y ___536_p.y $tmp184.y 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:253
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp185 ___537_i 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{253} %argrw{"wr"}
	add		___537_i ___537_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:260
#   float rmd = octaves - floor(octaves);
	floor		$tmp186 octaves 	%line{260} %argrw{"wr"}
	sub		___536_rmd octaves $tmp186 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:261
#   if (rmd != 0.0) {
	neq		$tmp187 ___536_rmd $const2 	%line{261} %argrw{"wrr"}
	if		$tmp187 554 554 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:262
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 549 	%line{262} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:51
#   float f = noise("snoise", p.x, p.y);
	noise		___447_f $const11 ___536_p.x ___536_p.y 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{51} %argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:52
#   if (isinf(f))
	isinf		$tmp189 ___447_f 	%line{52} %argrw{"wr"}
	if		$tmp189 548 548 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:53
#     return 0.0;
	assign		$tmp188 $const2 	%line{53} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:54
#   return f;
	assign		$tmp188 ___447_f 	%line{54} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:262
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp190 $tmp188 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{262} %argrw{"wrr"}
	mul		$tmp191 $tmp190 ___536_pwr 	%argrw{"wrr"}
	mul		___539_increment $tmp191 ___536_value 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:263
#     value += rmd * increment;
	mul		$tmp192 ___536_rmd ___539_increment 	%line{263} %argrw{"wrr"}
	add		___536_value ___536_value $tmp192 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:266
#   return value;
	assign		Fac ___536_value 	%line{266} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:738
#       Fac = 0.0;
	assign		Fac $const2 	%line{738} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:741
#   else if (dimensions == "3D") {
	eq		$tmp193 dimensions $const29 	%line{741} %argrw{"wrr"}
	if		$tmp193 806 1160 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:742
#     vector3 p = s * Scale;
	mul		___602_p s Scale 	%line{742} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:743
#     if (musgrave_type == "multifractal") {
	eq		$tmp194 musgrave_type $const6 	%line{743} %argrw{"wrr"}
	if		$tmp194 602 806 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:744
#       Fac = noise_musgrave_multi_fractal_3d(p, dimension, lacunarity, octaves);
	functioncall	$const30 602 	%line{744} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:380
#   vector3 p = co;
	assign		___552_p ___602_p 	%line{380} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:381
#   float value = 1.0;
	assign		___552_value $const8 	%line{381} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:382
#   float pwr = 1.0;
	assign		___552_pwr $const8 	%line{382} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:383
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp195 dimension 	%line{383} %argrw{"wr"}
	pow		___552_pwHL lacunarity $tmp195 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:385
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp198 569 572 584 586 	%line{385} %argrw{"r"}
	assign		___553_i $const9 	%argrw{"wr"}
	assign		$tmp196 octaves 	%argrw{"wr"}
	lt		$tmp197 ___553_i $tmp196 	%argrw{"wrr"}
	neq		$tmp198 $tmp197 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:386
#     value *= (pwr * safe_snoise(p) + 1.0);
	functioncall	$const10 579 	%line{386} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:59
#   float f = noise("snoise", p);
	noise		___448_f $const11 ___552_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{59} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:60
#   if (isinf(f))
	isinf		$tmp200 ___448_f 	%line{60} %argrw{"wr"}
	if		$tmp200 578 578 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#     return 0.0;
	assign		$tmp199 $const2 	%line{61} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:62
#   return f;
	assign		$tmp199 ___448_f 	%line{62} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:386
#     value *= (pwr * safe_snoise(p) + 1.0);
	mul		$tmp201 ___552_pwr $tmp199 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{386} %argrw{"wrr"}
	add		$tmp202 $tmp201 $const8 	%argrw{"wrr"}
	mul		___552_value ___552_value $tmp202 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:387
#     pwr *= pwHL;
	mul		___552_pwr ___552_pwr ___552_pwHL 	%line{387} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:388
#     p *= lacunarity;
	mul		___552_p ___552_p lacunarity 	%line{388} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:385
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp203 ___553_i 	%line{385} %argrw{"wr"}
	add		___553_i ___553_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:391
#   float rmd = octaves - floor(octaves);
	floor		$tmp204 octaves 	%line{391} %argrw{"wr"}
	sub		___552_rmd octaves $tmp204 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:392
#   if (rmd != 0.0) {
	neq		$tmp205 ___552_rmd $const2 	%line{392} %argrw{"wrr"}
	if		$tmp205 601 601 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:393
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp206 ___552_rmd ___552_pwr 	%line{393} %argrw{"wrr"}
	functioncall	$const10 598 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:59
#   float f = noise("snoise", p);
	noise		___448_f $const11 ___552_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{59} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:60
#   if (isinf(f))
	isinf		$tmp208 ___448_f 	%line{60} %argrw{"wr"}
	if		$tmp208 597 597 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#     return 0.0;
	assign		$tmp207 $const2 	%line{61} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:62
#   return f;
	assign		$tmp207 ___448_f 	%line{62} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:393
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp209 $tmp206 $tmp207 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{393} %argrw{"wrr"}
	add		$tmp210 $tmp209 $const8 	%argrw{"wrr"}
	mul		___552_value ___552_value $tmp210 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:396
#   return value;
	assign		Fac ___552_value 	%line{396} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:746
#     else if (musgrave_type == "fBM") {
	eq		$tmp211 musgrave_type $const13 	%line{746} %argrw{"wrr"}
	if		$tmp211 643 806 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:747
#       Fac = noise_musgrave_fBm_3d(p, dimension, lacunarity, octaves);
	functioncall	$const31 643 	%line{747} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:352
#   vector3 p = co;
	assign		___548_p ___602_p 	%line{352} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:353
#   float value = 0.0;
	assign		___548_value $const2 	%line{353} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:354
#   float pwr = 1.0;
	assign		___548_pwr $const8 	%line{354} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:355
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp212 dimension 	%line{355} %argrw{"wr"}
	pow		___548_pwHL lacunarity $tmp212 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:357
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp215 612 615 626 628 	%line{357} %argrw{"r"}
	assign		___549_i $const9 	%argrw{"wr"}
	assign		$tmp213 octaves 	%argrw{"wr"}
	lt		$tmp214 ___549_i $tmp213 	%argrw{"wrr"}
	neq		$tmp215 $tmp214 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:358
#     value += safe_snoise(p) * pwr;
	functioncall	$const10 622 	%line{358} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:59
#   float f = noise("snoise", p);
	noise		___448_f $const11 ___548_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{59} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:60
#   if (isinf(f))
	isinf		$tmp217 ___448_f 	%line{60} %argrw{"wr"}
	if		$tmp217 621 621 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#     return 0.0;
	assign		$tmp216 $const2 	%line{61} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:62
#   return f;
	assign		$tmp216 ___448_f 	%line{62} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:358
#     value += safe_snoise(p) * pwr;
	mul		$tmp218 $tmp216 ___548_pwr 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{358} %argrw{"wrr"}
	add		___548_value ___548_value $tmp218 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:359
#     pwr *= pwHL;
	mul		___548_pwr ___548_pwr ___548_pwHL 	%line{359} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:360
#     p *= lacunarity;
	mul		___548_p ___548_p lacunarity 	%line{360} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:357
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp219 ___549_i 	%line{357} %argrw{"wr"}
	add		___549_i ___549_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:363
#   float rmd = octaves - floor(octaves);
	floor		$tmp220 octaves 	%line{363} %argrw{"wr"}
	sub		___548_rmd octaves $tmp220 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:364
#   if (rmd != 0.0) {
	neq		$tmp221 ___548_rmd $const2 	%line{364} %argrw{"wrr"}
	if		$tmp221 642 642 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:365
#     value += rmd * safe_snoise(p) * pwr;
	functioncall	$const10 639 	%line{365} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:59
#   float f = noise("snoise", p);
	noise		___448_f $const11 ___548_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{59} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:60
#   if (isinf(f))
	isinf		$tmp223 ___448_f 	%line{60} %argrw{"wr"}
	if		$tmp223 638 638 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#     return 0.0;
	assign		$tmp222 $const2 	%line{61} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:62
#   return f;
	assign		$tmp222 ___448_f 	%line{62} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:365
#     value += rmd * safe_snoise(p) * pwr;
	mul		$tmp224 ___548_rmd $tmp222 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{365} %argrw{"wrr"}
	mul		$tmp225 $tmp224 ___548_pwr 	%argrw{"wrr"}
	add		___548_value ___548_value $tmp225 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:368
#   return value;
	assign		Fac ___548_value 	%line{368} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:749
#     else if (musgrave_type == "hybrid_multifractal") {
	eq		$tmp226 musgrave_type $const15 	%line{749} %argrw{"wrr"}
	if		$tmp226 706 806 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:750
#       Fac = noise_musgrave_hybrid_multi_fractal_3d(
	functioncall	$const32 706 	%line{750} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:445
#   vector3 p = co;
	assign		___560_p ___602_p 	%line{445} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:446
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp227 dimension 	%line{446} %argrw{"wr"}
	pow		___560_pwHL lacunarity $tmp227 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:447
#   float pwr = pwHL;
	assign		___560_pwr ___560_pwHL 	%line{447} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:449
#   float value = safe_snoise(p) + offset;
	functioncall	$const10 657 	%line{449} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:59
#   float f = noise("snoise", p);
	noise		___448_f $const11 ___560_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{59} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:60
#   if (isinf(f))
	isinf		$tmp229 ___448_f 	%line{60} %argrw{"wr"}
	if		$tmp229 656 656 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#     return 0.0;
	assign		$tmp228 $const2 	%line{61} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:62
#   return f;
	assign		$tmp228 ___448_f 	%line{62} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:449
#   float value = safe_snoise(p) + offset;
	add		___560_value $tmp228 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{449} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:450
#   float weight = gain * value;
	mul		___560_weight Gain ___560_value 	%line{450} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:451
#   p *= lacunarity;
	mul		___560_p ___560_p lacunarity 	%line{451} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:453
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	for		$tmp235 662 670 688 690 	%line{453} %argrw{"r"}
	assign		___561_i $const12 	%argrw{"wr"}
	gt		$tmp230 ___560_weight $const17 	%argrw{"wrr"}
	neq		$tmp231 $tmp230 $const9 	%argrw{"wrr"}
	if		$tmp231 669 669 	%argrw{"r"}
	assign		$tmp232 octaves 	%argrw{"wr"}
	lt		$tmp233 ___561_i $tmp232 	%argrw{"wrr"}
	neq		$tmp234 $tmp233 $const9 	%argrw{"wrr"}
	assign		$tmp231 $tmp234 	%argrw{"wr"}
	neq		$tmp235 $tmp231 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:454
#     if (weight > 1.0) {
	gt		$tmp236 ___560_weight $const8 	%line{454} %argrw{"wrr"}
	if		$tmp236 673 673 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:455
#       weight = 1.0;
	assign		___560_weight $const8 	%line{455} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:458
#     float signal = (safe_snoise(p) + offset) * pwr;
	functioncall	$const10 680 	%line{458} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:59
#   float f = noise("snoise", p);
	noise		___448_f $const11 ___560_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{59} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:60
#   if (isinf(f))
	isinf		$tmp238 ___448_f 	%line{60} %argrw{"wr"}
	if		$tmp238 679 679 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#     return 0.0;
	assign		$tmp237 $const2 	%line{61} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:62
#   return f;
	assign		$tmp237 ___448_f 	%line{62} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:458
#     float signal = (safe_snoise(p) + offset) * pwr;
	add		$tmp239 $tmp237 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{458} %argrw{"wrr"}
	mul		___562_signal $tmp239 ___560_pwr 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:459
#     pwr *= pwHL;
	mul		___560_pwr ___560_pwr ___560_pwHL 	%line{459} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:460
#     value += weight * signal;
	mul		$tmp240 ___560_weight ___562_signal 	%line{460} %argrw{"wrr"}
	add		___560_value ___560_value $tmp240 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:461
#     weight *= gain * signal;
	mul		$tmp241 Gain ___562_signal 	%line{461} %argrw{"wrr"}
	mul		___560_weight ___560_weight $tmp241 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:462
#     p *= lacunarity;
	mul		___560_p ___560_p lacunarity 	%line{462} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:453
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	assign		$tmp242 ___561_i 	%line{453} %argrw{"wr"}
	add		___561_i ___561_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:465
#   float rmd = octaves - floor(octaves);
	floor		$tmp243 octaves 	%line{465} %argrw{"wr"}
	sub		___560_rmd octaves $tmp243 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:466
#   if (rmd != 0.0) {
	neq		$tmp244 ___560_rmd $const2 	%line{466} %argrw{"wrr"}
	if		$tmp244 705 705 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:467
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	functioncall	$const10 701 	%line{467} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:59
#   float f = noise("snoise", p);
	noise		___448_f $const11 ___560_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{59} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:60
#   if (isinf(f))
	isinf		$tmp246 ___448_f 	%line{60} %argrw{"wr"}
	if		$tmp246 700 700 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#     return 0.0;
	assign		$tmp245 $const2 	%line{61} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:62
#   return f;
	assign		$tmp245 ___448_f 	%line{62} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:467
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	add		$tmp247 $tmp245 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{467} %argrw{"wrr"}
	mul		$tmp248 $tmp247 ___560_pwr 	%argrw{"wrr"}
	mul		$tmp249 ___560_rmd $tmp248 	%argrw{"wrr"}
	add		___560_value ___560_value $tmp249 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:470
#   return value;
	assign		Fac ___560_value 	%line{470} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:753
#     else if (musgrave_type == "ridged_multifractal") {
	eq		$tmp250 musgrave_type $const18 	%line{753} %argrw{"wrr"}
	if		$tmp250 752 806 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:754
#       Fac = noise_musgrave_ridged_multi_fractal_3d(
	functioncall	$const33 752 	%line{754} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:484
#   vector3 p = co;
	assign		___565_p ___602_p 	%line{484} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:485
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp251 dimension 	%line{485} %argrw{"wr"}
	pow		___565_pwHL lacunarity $tmp251 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:486
#   float pwr = pwHL;
	assign		___565_pwr ___565_pwHL 	%line{486} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:488
#   float signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 720 	%line{488} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:59
#   float f = noise("snoise", p);
	noise		___448_f $const11 ___565_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{59} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:60
#   if (isinf(f))
	isinf		$tmp254 ___448_f 	%line{60} %argrw{"wr"}
	if		$tmp254 719 719 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#     return 0.0;
	assign		$tmp253 $const2 	%line{61} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:62
#   return f;
	assign		$tmp253 ___448_f 	%line{62} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:488
#   float signal = offset - fabs(safe_snoise(p));
	fabs		$tmp252 $tmp253 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{488} %argrw{"wr"}
	sub		___565_signal Offset $tmp252 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:489
#   signal *= signal;
	mul		___565_signal ___565_signal ___565_signal 	%line{489} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:490
#   float value = signal;
	assign		___565_value ___565_signal 	%line{490} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:491
#   float weight = 1.0;
	assign		___565_weight $const8 	%line{491} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:493
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp257 727 730 749 751 	%line{493} %argrw{"r"}
	assign		___566_i $const12 	%argrw{"wr"}
	assign		$tmp255 octaves 	%argrw{"wr"}
	lt		$tmp256 ___566_i $tmp255 	%argrw{"wrr"}
	neq		$tmp257 $tmp256 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:494
#     p *= lacunarity;
	mul		___565_p ___565_p lacunarity 	%line{494} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:495
#     weight = clamp(signal * gain, 0.0, 1.0);
	mul		$tmp258 ___565_signal Gain 	%line{495} %argrw{"wrr"}
	functioncall	$const4 735 	%argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp259 $tmp258 $const8 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___565_weight $tmp259 $const2 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:496
#     signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 742 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{496} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:59
#   float f = noise("snoise", p);
	noise		___448_f $const11 ___565_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{59} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:60
#   if (isinf(f))
	isinf		$tmp262 ___448_f 	%line{60} %argrw{"wr"}
	if		$tmp262 741 741 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#     return 0.0;
	assign		$tmp261 $const2 	%line{61} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:62
#   return f;
	assign		$tmp261 ___448_f 	%line{62} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:496
#     signal = offset - fabs(safe_snoise(p));
	fabs		$tmp260 $tmp261 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{496} %argrw{"wr"}
	sub		___565_signal Offset $tmp260 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:497
#     signal *= signal;
	mul		___565_signal ___565_signal ___565_signal 	%line{497} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:498
#     signal *= weight;
	mul		___565_signal ___565_signal ___565_weight 	%line{498} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:499
#     value += signal * pwr;
	mul		$tmp263 ___565_signal ___565_pwr 	%line{499} %argrw{"wrr"}
	add		___565_value ___565_value $tmp263 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:500
#     pwr *= pwHL;
	mul		___565_pwr ___565_pwr ___565_pwHL 	%line{500} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:493
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp264 ___566_i 	%line{493} %argrw{"wr"}
	add		___566_i ___566_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:503
#   return value;
	assign		Fac ___565_value 	%line{503} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:757
#     else if (musgrave_type == "hetero_terrain") {
	eq		$tmp265 musgrave_type $const20 	%line{757} %argrw{"wrr"}
	if		$tmp265 805 806 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:758
#       Fac = noise_musgrave_hetero_terrain_3d(p, dimension, lacunarity, octaves, Offset);
	functioncall	$const34 805 	%line{758} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:410
#   vector3 p = co;
	assign		___556_p ___602_p 	%line{410} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:411
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp266 dimension 	%line{411} %argrw{"wr"}
	pow		___556_pwHL lacunarity $tmp266 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:412
#   float pwr = pwHL;
	assign		___556_pwr ___556_pwHL 	%line{412} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:415
#   float value = offset + safe_snoise(p);
	functioncall	$const10 766 	%line{415} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:59
#   float f = noise("snoise", p);
	noise		___448_f $const11 ___556_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{59} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:60
#   if (isinf(f))
	isinf		$tmp268 ___448_f 	%line{60} %argrw{"wr"}
	if		$tmp268 765 765 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#     return 0.0;
	assign		$tmp267 $const2 	%line{61} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:62
#   return f;
	assign		$tmp267 ___448_f 	%line{62} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:415
#   float value = offset + safe_snoise(p);
	add		___556_value Offset $tmp267 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{415} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:416
#   p *= lacunarity;
	mul		___556_p ___556_p lacunarity 	%line{416} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:418
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp271 770 773 786 788 	%line{418} %argrw{"r"}
	assign		___557_i $const12 	%argrw{"wr"}
	assign		$tmp269 octaves 	%argrw{"wr"}
	lt		$tmp270 ___557_i $tmp269 	%argrw{"wrr"}
	neq		$tmp271 $tmp270 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:419
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 780 	%line{419} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:59
#   float f = noise("snoise", p);
	noise		___448_f $const11 ___556_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{59} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:60
#   if (isinf(f))
	isinf		$tmp273 ___448_f 	%line{60} %argrw{"wr"}
	if		$tmp273 779 779 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#     return 0.0;
	assign		$tmp272 $const2 	%line{61} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:62
#   return f;
	assign		$tmp272 ___448_f 	%line{62} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:419
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp274 $tmp272 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{419} %argrw{"wrr"}
	mul		$tmp275 $tmp274 ___556_pwr 	%argrw{"wrr"}
	mul		___558_increment $tmp275 ___556_value 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:420
#     value += increment;
	add		___556_value ___556_value ___558_increment 	%line{420} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:421
#     pwr *= pwHL;
	mul		___556_pwr ___556_pwr ___556_pwHL 	%line{421} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:422
#     p *= lacunarity;
	mul		___556_p ___556_p lacunarity 	%line{422} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:418
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp276 ___557_i 	%line{418} %argrw{"wr"}
	add		___557_i ___557_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:425
#   float rmd = octaves - floor(octaves);
	floor		$tmp277 octaves 	%line{425} %argrw{"wr"}
	sub		___556_rmd octaves $tmp277 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:426
#   if (rmd != 0.0) {
	neq		$tmp278 ___556_rmd $const2 	%line{426} %argrw{"wrr"}
	if		$tmp278 804 804 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:427
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 799 	%line{427} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:59
#   float f = noise("snoise", p);
	noise		___448_f $const11 ___556_p 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{59} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:60
#   if (isinf(f))
	isinf		$tmp280 ___448_f 	%line{60} %argrw{"wr"}
	if		$tmp280 798 798 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:61
#     return 0.0;
	assign		$tmp279 $const2 	%line{61} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:62
#   return f;
	assign		$tmp279 ___448_f 	%line{62} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:427
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp281 $tmp279 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{427} %argrw{"wrr"}
	mul		$tmp282 $tmp281 ___556_pwr 	%argrw{"wrr"}
	mul		___559_increment $tmp282 ___556_value 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:428
#     value += rmd * increment;
	mul		$tmp283 ___556_rmd ___559_increment 	%line{428} %argrw{"wrr"}
	add		___556_value ___556_value $tmp283 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:431
#   return value;
	assign		Fac ___556_value 	%line{431} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:761
#       Fac = 0.0;
	assign		Fac $const2 	%line{761} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:764
#   else if (dimensions == "4D") {
	eq		$tmp284 dimensions $const35 	%line{764} %argrw{"wrr"}
	if		$tmp284 1159 1160 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:765
#     vector4 p = vector4(s[0], s[1], s[2], W) * Scale;
	compref		$tmp285.x s $const9 	%line{765} %argrw{"wrr"}
	compref		$tmp285.y s $const12 	%argrw{"wrr"}
	compref		$tmp285.z s $const36 	%argrw{"wrr"}
	assign		$tmp285.w W 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 822 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp286.x Scale 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp286.y Scale 	%argrw{"wr"}
	assign		$tmp286.z Scale 	%argrw{"wr"}
	assign		$tmp286.w Scale 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 822 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___609_p.x $tmp285.x $tmp286.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___609_p.y $tmp285.y $tmp286.y 	%argrw{"wrr"}
	mul		___609_p.z $tmp285.z $tmp286.z 	%argrw{"wrr"}
	mul		___609_p.w $tmp285.w $tmp286.w 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:766
#     if (musgrave_type == "multifractal") {
	eq		$tmp287 musgrave_type $const6 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{766} %argrw{"wrr"}
	if		$tmp287 879 1159 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:767
#       Fac = noise_musgrave_multi_fractal_4d(p, dimension, lacunarity, octaves);
	functioncall	$const37 879 	%line{767} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:545
#   vector4 p = co;
	assign		___572_p.x ___609_p.x 	%line{545} %argrw{"wr"}
	assign		___572_p.y ___609_p.y 	%argrw{"wr"}
	assign		___572_p.z ___609_p.z 	%argrw{"wr"}
	assign		___572_p.w ___609_p.w 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:546
#   float value = 1.0;
	assign		___572_value $const8 	%line{546} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:547
#   float pwr = 1.0;
	assign		___572_pwr $const8 	%line{547} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:548
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp288 dimension 	%line{548} %argrw{"wr"}
	pow		___572_pwHL lacunarity $tmp288 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:550
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp291 835 838 860 862 	%line{550} %argrw{"r"}
	assign		___573_i $const9 	%argrw{"wr"}
	assign		$tmp289 octaves 	%argrw{"wr"}
	lt		$tmp290 ___573_i $tmp289 	%argrw{"wrr"}
	neq		$tmp291 $tmp290 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:551
#     value *= (pwr * safe_snoise(p) + 1.0);
	functioncall	$const10 846 	%line{551} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:67
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp293 ___572_p.x ___572_p.y ___572_p.z 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{67} %argrw{"wrrr"}
	noise		___449_f $const11 $tmp293 ___572_p.w 	%argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:68
#   if (isinf(f))
	isinf		$tmp294 ___449_f 	%line{68} %argrw{"wr"}
	if		$tmp294 845 845 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:69
#     return 0.0;
	assign		$tmp292 $const2 	%line{69} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:70
#   return f;
	assign		$tmp292 ___449_f 	%line{70} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:551
#     value *= (pwr * safe_snoise(p) + 1.0);
	mul		$tmp295 ___572_pwr $tmp292 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{551} %argrw{"wrr"}
	add		$tmp296 $tmp295 $const8 	%argrw{"wrr"}
	mul		___572_value ___572_value $tmp296 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:552
#     pwr *= pwHL;
	mul		___572_pwr ___572_pwr ___572_pwHL 	%line{552} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 860 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp297.x lacunarity 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp297.y lacunarity 	%argrw{"wr"}
	assign		$tmp297.z lacunarity 	%argrw{"wr"}
	assign		$tmp297.w lacunarity 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 860 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___572_p.x ___572_p.x $tmp297.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___572_p.y ___572_p.y $tmp297.y 	%argrw{"wrr"}
	mul		___572_p.z ___572_p.z $tmp297.z 	%argrw{"wrr"}
	mul		___572_p.w ___572_p.w $tmp297.w 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:550
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp298 ___573_i 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{550} %argrw{"wr"}
	add		___573_i ___573_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:556
#   float rmd = octaves - floor(octaves);
	floor		$tmp299 octaves 	%line{556} %argrw{"wr"}
	sub		___572_rmd octaves $tmp299 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:557
#   if (rmd != 0.0) {
	neq		$tmp300 ___572_rmd $const2 	%line{557} %argrw{"wrr"}
	if		$tmp300 878 878 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:558
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp301 ___572_rmd ___572_pwr 	%line{558} %argrw{"wrr"}
	functioncall	$const10 875 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:67
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp303 ___572_p.x ___572_p.y ___572_p.z 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{67} %argrw{"wrrr"}
	noise		___449_f $const11 $tmp303 ___572_p.w 	%argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:68
#   if (isinf(f))
	isinf		$tmp304 ___449_f 	%line{68} %argrw{"wr"}
	if		$tmp304 874 874 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:69
#     return 0.0;
	assign		$tmp302 $const2 	%line{69} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:70
#   return f;
	assign		$tmp302 ___449_f 	%line{70} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:558
#     value *= (rmd * pwr * safe_snoise(p) + 1.0); /* correct? */
	mul		$tmp305 $tmp301 $tmp302 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{558} %argrw{"wrr"}
	add		$tmp306 $tmp305 $const8 	%argrw{"wrr"}
	mul		___572_value ___572_value $tmp306 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:561
#   return value;
	assign		Fac ___572_value 	%line{561} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:769
#     else if (musgrave_type == "fBM") {
	eq		$tmp307 musgrave_type $const13 	%line{769} %argrw{"wrr"}
	if		$tmp307 934 1159 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:770
#       Fac = noise_musgrave_fBm_4d(p, dimension, lacunarity, octaves);
	functioncall	$const38 934 	%line{770} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:517
#   vector4 p = co;
	assign		___568_p.x ___609_p.x 	%line{517} %argrw{"wr"}
	assign		___568_p.y ___609_p.y 	%argrw{"wr"}
	assign		___568_p.z ___609_p.z 	%argrw{"wr"}
	assign		___568_p.w ___609_p.w 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:518
#   float value = 0.0;
	assign		___568_value $const2 	%line{518} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:519
#   float pwr = 1.0;
	assign		___568_pwr $const8 	%line{519} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:520
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp308 dimension 	%line{520} %argrw{"wr"}
	pow		___568_pwHL lacunarity $tmp308 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:522
#   for (int i = 0; i < (int)octaves; i++) {
	for		$tmp311 892 895 916 918 	%line{522} %argrw{"r"}
	assign		___569_i $const9 	%argrw{"wr"}
	assign		$tmp309 octaves 	%argrw{"wr"}
	lt		$tmp310 ___569_i $tmp309 	%argrw{"wrr"}
	neq		$tmp311 $tmp310 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:523
#     value += safe_snoise(p) * pwr;
	functioncall	$const10 903 	%line{523} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:67
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp313 ___568_p.x ___568_p.y ___568_p.z 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{67} %argrw{"wrrr"}
	noise		___449_f $const11 $tmp313 ___568_p.w 	%argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:68
#   if (isinf(f))
	isinf		$tmp314 ___449_f 	%line{68} %argrw{"wr"}
	if		$tmp314 902 902 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:69
#     return 0.0;
	assign		$tmp312 $const2 	%line{69} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:70
#   return f;
	assign		$tmp312 ___449_f 	%line{70} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:523
#     value += safe_snoise(p) * pwr;
	mul		$tmp315 $tmp312 ___568_pwr 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{523} %argrw{"wrr"}
	add		___568_value ___568_value $tmp315 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:524
#     pwr *= pwHL;
	mul		___568_pwr ___568_pwr ___568_pwHL 	%line{524} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 916 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp316.x lacunarity 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp316.y lacunarity 	%argrw{"wr"}
	assign		$tmp316.z lacunarity 	%argrw{"wr"}
	assign		$tmp316.w lacunarity 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 916 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___568_p.x ___568_p.x $tmp316.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___568_p.y ___568_p.y $tmp316.y 	%argrw{"wrr"}
	mul		___568_p.z ___568_p.z $tmp316.z 	%argrw{"wrr"}
	mul		___568_p.w ___568_p.w $tmp316.w 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:522
#   for (int i = 0; i < (int)octaves; i++) {
	assign		$tmp317 ___569_i 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{522} %argrw{"wr"}
	add		___569_i ___569_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:528
#   float rmd = octaves - floor(octaves);
	floor		$tmp318 octaves 	%line{528} %argrw{"wr"}
	sub		___568_rmd octaves $tmp318 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:529
#   if (rmd != 0.0) {
	neq		$tmp319 ___568_rmd $const2 	%line{529} %argrw{"wrr"}
	if		$tmp319 933 933 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:530
#     value += rmd * safe_snoise(p) * pwr;
	functioncall	$const10 930 	%line{530} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:67
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp321 ___568_p.x ___568_p.y ___568_p.z 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{67} %argrw{"wrrr"}
	noise		___449_f $const11 $tmp321 ___568_p.w 	%argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:68
#   if (isinf(f))
	isinf		$tmp322 ___449_f 	%line{68} %argrw{"wr"}
	if		$tmp322 929 929 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:69
#     return 0.0;
	assign		$tmp320 $const2 	%line{69} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:70
#   return f;
	assign		$tmp320 ___449_f 	%line{70} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:530
#     value += rmd * safe_snoise(p) * pwr;
	mul		$tmp323 ___568_rmd $tmp320 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{530} %argrw{"wrr"}
	mul		$tmp324 $tmp323 ___568_pwr 	%argrw{"wrr"}
	add		___568_value ___568_value $tmp324 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:533
#   return value;
	assign		Fac ___568_value 	%line{533} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:772
#     else if (musgrave_type == "hybrid_multifractal") {
	eq		$tmp325 musgrave_type $const15 	%line{772} %argrw{"wrr"}
	if		$tmp325 1021 1159 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:773
#       Fac = noise_musgrave_hybrid_multi_fractal_4d(
	functioncall	$const39 1021 	%line{773} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:610
#   vector4 p = co;
	assign		___580_p.x ___609_p.x 	%line{610} %argrw{"wr"}
	assign		___580_p.y ___609_p.y 	%argrw{"wr"}
	assign		___580_p.z ___609_p.z 	%argrw{"wr"}
	assign		___580_p.w ___609_p.w 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:611
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp326 dimension 	%line{611} %argrw{"wr"}
	pow		___580_pwHL lacunarity $tmp326 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:612
#   float pwr = pwHL;
	assign		___580_pwr ___580_pwHL 	%line{612} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:614
#   float value = safe_snoise(p) + offset;
	functioncall	$const10 952 	%line{614} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:67
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp328 ___580_p.x ___580_p.y ___580_p.z 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{67} %argrw{"wrrr"}
	noise		___449_f $const11 $tmp328 ___580_p.w 	%argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:68
#   if (isinf(f))
	isinf		$tmp329 ___449_f 	%line{68} %argrw{"wr"}
	if		$tmp329 951 951 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:69
#     return 0.0;
	assign		$tmp327 $const2 	%line{69} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:70
#   return f;
	assign		$tmp327 ___449_f 	%line{70} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:614
#   float value = safe_snoise(p) + offset;
	add		___580_value $tmp327 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{614} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:615
#   float weight = gain * value;
	mul		___580_weight Gain ___580_value 	%line{615} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 964 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp330.x lacunarity 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp330.y lacunarity 	%argrw{"wr"}
	assign		$tmp330.z lacunarity 	%argrw{"wr"}
	assign		$tmp330.w lacunarity 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 964 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___580_p.x ___580_p.x $tmp330.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___580_p.y ___580_p.y $tmp330.y 	%argrw{"wrr"}
	mul		___580_p.z ___580_p.z $tmp330.z 	%argrw{"wrr"}
	mul		___580_p.w ___580_p.w $tmp330.w 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:618
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	for		$tmp336 966 974 1002 1004 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{618} %argrw{"r"}
	assign		___581_i $const12 	%argrw{"wr"}
	gt		$tmp331 ___580_weight $const17 	%argrw{"wrr"}
	neq		$tmp332 $tmp331 $const9 	%argrw{"wrr"}
	if		$tmp332 973 973 	%argrw{"r"}
	assign		$tmp333 octaves 	%argrw{"wr"}
	lt		$tmp334 ___581_i $tmp333 	%argrw{"wrr"}
	neq		$tmp335 $tmp334 $const9 	%argrw{"wrr"}
	assign		$tmp332 $tmp335 	%argrw{"wr"}
	neq		$tmp336 $tmp332 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:619
#     if (weight > 1.0) {
	gt		$tmp337 ___580_weight $const8 	%line{619} %argrw{"wrr"}
	if		$tmp337 977 977 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:620
#       weight = 1.0;
	assign		___580_weight $const8 	%line{620} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:623
#     float signal = (safe_snoise(p) + offset) * pwr;
	functioncall	$const10 985 	%line{623} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:67
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp339 ___580_p.x ___580_p.y ___580_p.z 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{67} %argrw{"wrrr"}
	noise		___449_f $const11 $tmp339 ___580_p.w 	%argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:68
#   if (isinf(f))
	isinf		$tmp340 ___449_f 	%line{68} %argrw{"wr"}
	if		$tmp340 984 984 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:69
#     return 0.0;
	assign		$tmp338 $const2 	%line{69} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:70
#   return f;
	assign		$tmp338 ___449_f 	%line{70} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:623
#     float signal = (safe_snoise(p) + offset) * pwr;
	add		$tmp341 $tmp338 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{623} %argrw{"wrr"}
	mul		___582_signal $tmp341 ___580_pwr 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:624
#     pwr *= pwHL;
	mul		___580_pwr ___580_pwr ___580_pwHL 	%line{624} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:625
#     value += weight * signal;
	mul		$tmp342 ___580_weight ___582_signal 	%line{625} %argrw{"wrr"}
	add		___580_value ___580_value $tmp342 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:626
#     weight *= gain * signal;
	mul		$tmp343 Gain ___582_signal 	%line{626} %argrw{"wrr"}
	mul		___580_weight ___580_weight $tmp343 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 1002 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp344.x lacunarity 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp344.y lacunarity 	%argrw{"wr"}
	assign		$tmp344.z lacunarity 	%argrw{"wr"}
	assign		$tmp344.w lacunarity 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 1002 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___580_p.x ___580_p.x $tmp344.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___580_p.y ___580_p.y $tmp344.y 	%argrw{"wrr"}
	mul		___580_p.z ___580_p.z $tmp344.z 	%argrw{"wrr"}
	mul		___580_p.w ___580_p.w $tmp344.w 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:618
#   for (int i = 1; (weight > 0.001) && (i < (int)octaves); i++) {
	assign		$tmp345 ___581_i 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{618} %argrw{"wr"}
	add		___581_i ___581_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:630
#   float rmd = octaves - floor(octaves);
	floor		$tmp346 octaves 	%line{630} %argrw{"wr"}
	sub		___580_rmd octaves $tmp346 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:631
#   if (rmd != 0.0) {
	neq		$tmp347 ___580_rmd $const2 	%line{631} %argrw{"wrr"}
	if		$tmp347 1020 1020 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:632
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	functioncall	$const10 1016 	%line{632} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:67
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp349 ___580_p.x ___580_p.y ___580_p.z 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{67} %argrw{"wrrr"}
	noise		___449_f $const11 $tmp349 ___580_p.w 	%argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:68
#   if (isinf(f))
	isinf		$tmp350 ___449_f 	%line{68} %argrw{"wr"}
	if		$tmp350 1015 1015 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:69
#     return 0.0;
	assign		$tmp348 $const2 	%line{69} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:70
#   return f;
	assign		$tmp348 ___449_f 	%line{70} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:632
#     value += rmd * ((safe_snoise(p) + offset) * pwr);
	add		$tmp351 $tmp348 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{632} %argrw{"wrr"}
	mul		$tmp352 $tmp351 ___580_pwr 	%argrw{"wrr"}
	mul		$tmp353 ___580_rmd $tmp352 	%argrw{"wrr"}
	add		___580_value ___580_value $tmp353 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:635
#   return value;
	assign		Fac ___580_value 	%line{635} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:776
#     else if (musgrave_type == "ridged_multifractal") {
	eq		$tmp354 musgrave_type $const18 	%line{776} %argrw{"wrr"}
	if		$tmp354 1081 1159 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:777
#       Fac = noise_musgrave_ridged_multi_fractal_4d(
	functioncall	$const40 1081 	%line{777} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:649
#   vector4 p = co;
	assign		___585_p.x ___609_p.x 	%line{649} %argrw{"wr"}
	assign		___585_p.y ___609_p.y 	%argrw{"wr"}
	assign		___585_p.z ___609_p.z 	%argrw{"wr"}
	assign		___585_p.w ___609_p.w 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:650
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp355 dimension 	%line{650} %argrw{"wr"}
	pow		___585_pwHL lacunarity $tmp355 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:651
#   float pwr = pwHL;
	assign		___585_pwr ___585_pwHL 	%line{651} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:653
#   float signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 1039 	%line{653} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:67
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp358 ___585_p.x ___585_p.y ___585_p.z 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{67} %argrw{"wrrr"}
	noise		___449_f $const11 $tmp358 ___585_p.w 	%argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:68
#   if (isinf(f))
	isinf		$tmp359 ___449_f 	%line{68} %argrw{"wr"}
	if		$tmp359 1038 1038 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:69
#     return 0.0;
	assign		$tmp357 $const2 	%line{69} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:70
#   return f;
	assign		$tmp357 ___449_f 	%line{70} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:653
#   float signal = offset - fabs(safe_snoise(p));
	fabs		$tmp356 $tmp357 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{653} %argrw{"wr"}
	sub		___585_signal Offset $tmp356 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:654
#   signal *= signal;
	mul		___585_signal ___585_signal ___585_signal 	%line{654} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:655
#   float value = signal;
	assign		___585_value ___585_signal 	%line{655} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:656
#   float weight = 1.0;
	assign		___585_weight $const8 	%line{656} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:658
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp362 1046 1049 1078 1080 	%line{658} %argrw{"r"}
	assign		___586_i $const12 	%argrw{"wr"}
	assign		$tmp360 octaves 	%argrw{"wr"}
	lt		$tmp361 ___586_i $tmp360 	%argrw{"wrr"}
	neq		$tmp362 $tmp361 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 1059 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp363.x lacunarity 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp363.y lacunarity 	%argrw{"wr"}
	assign		$tmp363.z lacunarity 	%argrw{"wr"}
	assign		$tmp363.w lacunarity 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 1059 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___585_p.x ___585_p.x $tmp363.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___585_p.y ___585_p.y $tmp363.y 	%argrw{"wrr"}
	mul		___585_p.z ___585_p.z $tmp363.z 	%argrw{"wrr"}
	mul		___585_p.w ___585_p.w $tmp363.w 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:660
#     weight = clamp(signal * gain, 0.0, 1.0);
	mul		$tmp364 ___585_signal Gain 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{660} %argrw{"wrr"}
	functioncall	$const4 1063 	%argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp365 $tmp364 $const8 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		___585_weight $tmp365 $const2 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:661
#     signal = offset - fabs(safe_snoise(p));
	functioncall	$const10 1071 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{661} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:67
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp368 ___585_p.x ___585_p.y ___585_p.z 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{67} %argrw{"wrrr"}
	noise		___449_f $const11 $tmp368 ___585_p.w 	%argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:68
#   if (isinf(f))
	isinf		$tmp369 ___449_f 	%line{68} %argrw{"wr"}
	if		$tmp369 1070 1070 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:69
#     return 0.0;
	assign		$tmp367 $const2 	%line{69} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:70
#   return f;
	assign		$tmp367 ___449_f 	%line{70} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:661
#     signal = offset - fabs(safe_snoise(p));
	fabs		$tmp366 $tmp367 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{661} %argrw{"wr"}
	sub		___585_signal Offset $tmp366 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:662
#     signal *= signal;
	mul		___585_signal ___585_signal ___585_signal 	%line{662} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:663
#     signal *= weight;
	mul		___585_signal ___585_signal ___585_weight 	%line{663} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:664
#     value += signal * pwr;
	mul		$tmp370 ___585_signal ___585_pwr 	%line{664} %argrw{"wrr"}
	add		___585_value ___585_value $tmp370 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:665
#     pwr *= pwHL;
	mul		___585_pwr ___585_pwr ___585_pwHL 	%line{665} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:658
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp371 ___586_i 	%line{658} %argrw{"wr"}
	add		___586_i ___586_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:668
#   return value;
	assign		Fac ___585_value 	%line{668} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:780
#     else if (musgrave_type == "hetero_terrain") {
	eq		$tmp372 musgrave_type $const20 	%line{780} %argrw{"wrr"}
	if		$tmp372 1158 1159 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:781
#       Fac = noise_musgrave_hetero_terrain_4d(p, dimension, lacunarity, octaves, Offset);
	functioncall	$const41 1158 	%line{781} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:575
#   vector4 p = co;
	assign		___576_p.x ___609_p.x 	%line{575} %argrw{"wr"}
	assign		___576_p.y ___609_p.y 	%argrw{"wr"}
	assign		___576_p.z ___609_p.z 	%argrw{"wr"}
	assign		___576_p.w ___609_p.w 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:576
#   float pwHL = pow(lacunarity, -H);
	neg		$tmp373 dimension 	%line{576} %argrw{"wr"}
	pow		___576_pwHL lacunarity $tmp373 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:577
#   float pwr = pwHL;
	assign		___576_pwr ___576_pwHL 	%line{577} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:580
#   float value = offset + safe_snoise(p);
	functioncall	$const10 1099 	%line{580} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:67
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp375 ___576_p.x ___576_p.y ___576_p.z 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{67} %argrw{"wrrr"}
	noise		___449_f $const11 $tmp375 ___576_p.w 	%argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:68
#   if (isinf(f))
	isinf		$tmp376 ___449_f 	%line{68} %argrw{"wr"}
	if		$tmp376 1098 1098 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:69
#     return 0.0;
	assign		$tmp374 $const2 	%line{69} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:70
#   return f;
	assign		$tmp374 ___449_f 	%line{70} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:580
#   float value = offset + safe_snoise(p);
	add		___576_value Offset $tmp374 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{580} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 1110 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp377.x lacunarity 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp377.y lacunarity 	%argrw{"wr"}
	assign		$tmp377.z lacunarity 	%argrw{"wr"}
	assign		$tmp377.w lacunarity 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 1110 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___576_p.x ___576_p.x $tmp377.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___576_p.y ___576_p.y $tmp377.y 	%argrw{"wrr"}
	mul		___576_p.z ___576_p.z $tmp377.z 	%argrw{"wrr"}
	mul		___576_p.w ___576_p.w $tmp377.w 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:583
#   for (int i = 1; i < (int)octaves; i++) {
	for		$tmp380 1112 1115 1138 1140 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{583} %argrw{"r"}
	assign		___577_i $const12 	%argrw{"wr"}
	assign		$tmp378 octaves 	%argrw{"wr"}
	lt		$tmp379 ___577_i $tmp378 	%argrw{"wrr"}
	neq		$tmp380 $tmp379 $const9 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:584
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 1123 	%line{584} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:67
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp382 ___576_p.x ___576_p.y ___576_p.z 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{67} %argrw{"wrrr"}
	noise		___449_f $const11 $tmp382 ___576_p.w 	%argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:68
#   if (isinf(f))
	isinf		$tmp383 ___449_f 	%line{68} %argrw{"wr"}
	if		$tmp383 1122 1122 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:69
#     return 0.0;
	assign		$tmp381 $const2 	%line{69} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:70
#   return f;
	assign		$tmp381 ___449_f 	%line{70} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:584
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp384 $tmp381 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{584} %argrw{"wrr"}
	mul		$tmp385 $tmp384 ___576_pwr 	%argrw{"wrr"}
	mul		___578_increment $tmp385 ___576_value 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:585
#     value += increment;
	add		___576_value ___576_value ___578_increment 	%line{585} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:586
#     pwr *= pwHL;
	mul		___576_pwr ___576_pwr ___576_pwHL 	%line{586} %argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 1138 	%line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:91
#     return a * vector4(b, b, b, b);
	assign		$tmp386.x lacunarity 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{91} %argrw{"wr"}
	assign		$tmp386.y lacunarity 	%argrw{"wr"}
	assign		$tmp386.z lacunarity 	%argrw{"wr"}
	assign		$tmp386.w lacunarity 	%argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:791
# 
	functioncall	$const23 1138 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{791} %argrw{"r"}
# E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h:81
#     return vector4(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);
	mul		___576_p.x ___576_p.x $tmp386.x 	%filename{"E:/projects/blender_latest/blender/../lib/win64_vc15/osl/share/OSL/shaders\\vector4.h"} %line{81} %argrw{"wrr"}
	mul		___576_p.y ___576_p.y $tmp386.y 	%argrw{"wrr"}
	mul		___576_p.z ___576_p.z $tmp386.z 	%argrw{"wrr"}
	mul		___576_p.w ___576_p.w $tmp386.w 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:583
#   for (int i = 1; i < (int)octaves; i++) {
	assign		$tmp387 ___577_i 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{583} %argrw{"wr"}
	add		___577_i ___577_i $const12 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:590
#   float rmd = octaves - floor(octaves);
	floor		$tmp388 octaves 	%line{590} %argrw{"wr"}
	sub		___576_rmd octaves $tmp388 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:591
#   if (rmd != 0.0) {
	neq		$tmp389 ___576_rmd $const2 	%line{591} %argrw{"wrr"}
	if		$tmp389 1157 1157 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:592
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	functioncall	$const10 1152 	%line{592} %argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:67
#   float f = noise("snoise", vector3(p.x, p.y, p.z), p.w);
	point		$tmp391 ___576_p.x ___576_p.y ___576_p.z 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h"} %line{67} %argrw{"wrrr"}
	noise		___449_f $const11 $tmp391 ___576_p.w 	%argrw{"wrrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:68
#   if (isinf(f))
	isinf		$tmp392 ___449_f 	%line{68} %argrw{"wr"}
	if		$tmp392 1151 1151 	%argrw{"r"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:69
#     return 0.0;
	assign		$tmp390 $const2 	%line{69} %argrw{"wr"}
	return
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders\\node_noise.h:70
#   return f;
	assign		$tmp390 ___449_f 	%line{70} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:592
#     float increment = (safe_snoise(p) + offset) * pwr * value;
	add		$tmp393 $tmp390 Offset 	%filename{"E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl"} %line{592} %argrw{"wrr"}
	mul		$tmp394 $tmp393 ___576_pwr 	%argrw{"wrr"}
	mul		___579_increment $tmp394 ___576_value 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:593
#     value += rmd * increment;
	mul		$tmp395 ___576_rmd ___579_increment 	%line{593} %argrw{"wrr"}
	add		___576_value ___576_value $tmp395 	%argrw{"wrr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:596
#   return value;
	assign		Fac ___576_value 	%line{596} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:784
#       Fac = 0.0;
	assign		Fac $const2 	%line{784} %argrw{"wr"}
# E:/projects/blender_latest/blender/intern/cycles/kernel/osl/shaders/node_musgrave_texture.osl:788
#     Fac = 0.0;
	assign		Fac $const2 	%line{788} %argrw{"wr"}
	end
